{"version":3,"sources":["pages/constructor-page/constructor-page.module.css","components/ingredient-variants/ingredient-variants.module.css","components/filling-ingredient/filling-ingredient.module.css","components/modal-overlay/modal-overlay.module.css","images/done.png","pages/order-details-page/order-details-page.module.css","components/profile-menu/profile-menu.module.css","components/ingredient-details/ingredient-details.module.css","reportWebVitals.ts","services/hooks.ts","components/app-header/app-header.tsx","components/protected-route/protected-route.tsx","utils/utils.ts","services/actions/refreshToken.ts","services/constants/index.ts","services/actions/login.ts","pages/login-page.tsx","components/draggable-ingredient/draggable-ingredient.tsx","components/ingredient-variants/ingredient-variants.tsx","components/burger-ingredients/burger-ingredients.tsx","components/filling-ingredient/filling-ingredient.tsx","services/actions/constructor-ingredients.ts","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/order-details/order-details.tsx","services/actions/order.ts","components/burger-constructor/burger-constructor.tsx","pages/constructor-page/constructor-page.tsx","services/actions/register.ts","pages/register-page.tsx","services/actions/password.ts","pages/forgot-password-page.tsx","pages/reset-password-page.tsx","services/actions/logout.ts","components/profile-menu/profile-menu.tsx","services/actions/user.ts","pages/profile-page/profile-page.tsx","components/ingredient-mini/ingredient-mini.tsx","components/order-card/order-card.tsx","services/constants/wsActionTypes.ts","services/actions/wsActions.ts","pages/orders-page/orders-page.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient-page.tsx","components/orders-list/orders-list.tsx","pages/feed-page/feed-page.tsx","components/ingredient-card/ingredient-card.tsx","components/full-order-card/full-order-card.tsx","pages/order-details-page/order-details-page.tsx","pages/not-found-page/not-found-page.tsx","services/actions/all-ingredients.ts","components/app/app.tsx","services/socketMiddleware.ts","services/reducers/all-ingredients.ts","services/reducers/order.ts","services/reducers/constructor-ingredients.ts","services/reducers/auth.ts","services/reducers/wsReducer.ts","services/reducers/index.ts","services/store.ts","index.tsx","components/app-header/app-header.module.css","components/order-card/order-card.module.css","pages/feed-page/feed-page.module.css","components/full-order-card/full-order-card.module.css","components/draggable-ingredient/draggable-ingredient.module.css","components/burger-constructor/burger-constructor.module.css","components/order-details/order-details.module.css","components/burger-ingredients/burger-ingredients.module.css","components/modal/modal.module.css","pages/profile-page/profile-page.module.css","components/ingredient-mini/ingredient-mini.module.css","components/ingredient-card/ingredient-card.module.css","pages/not-found-page/not-found-page.module.css","pages/orders-page/orders-page.module.css","components/orders-list/orders-list.module.css","pages/inputs-pages.module.css"],"names":["module","exports","main","list","card","image","priceArea","price","title","element","overlay","__webpack_require__","p","menu","nav_list","nav_element","nav_link","active_nav_link","nav_button","info","nutritionalValue","component","componentName","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","useDispatch","dispatchHook","useSelector","selectorHook","AppHeader","pathname","useLocation","react_default","a","createElement","className","concat","appHeader","header","menuLeftColumn","react_router_dom","to","exact","link","activeClassName","dist","type","logo","ProtectedRoute","children","rest","Object","objectWithoutProperties","user","store","auth","isAuthChecked","react_router","assign","render","_ref2","location","state","from","baseUrl","wsBaseUrl","regExp","checkResponse","res","ok","json","err","Promise","reject","setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","fetchWithRefresh","asyncToGenerator","regenerator_default","mark","_callee","url","options","data","currentRefreshToken","newData","refreshData","_res","_data","_args","arguments","wrap","_context","prev","next","length","fetch","sent","abrupt","t0","message","localStorage","getItem","refreshToken","method","mode","cache","credentials","headers","Content-Type","redirect","referrerPolicy","body","JSON","stringify","token","success","setItem","accessToken","split","objectSpread","Authotization","stop","_x","apply","this","statuses","done","created","pending","GET_ALL_INGREDIENTS","GET_ALL_INGREDIENTS_SUCCESS","GET_ALL_INGREDIENTS_FAILED","REORDER_INGREDIENT","ADD_TO_CONSTRUCTOR","DELETE_FROM_CONSTRUCTOR","LOGIN","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAILED","GET_ORDER","GET_ORDER_SUCCESS","GET_ORDER_FAILED","CLOSE_ORDER","RECOVER_PASSWORD","RECOVER_PASSWORD_SUCCESS","RECOVER_PASSWORD_FAILED","RESET_PASSWORD","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","REGISTER","REGISTER_SUCCESS","REGISTER_FAILED","GET_USER","GET_USER_SUCCESS","GET_USER_FAILED","EDIT_USER","EDIT_USER_SUCCESS","EDIT_USER_FAILED","login","email","password","dispatch","isLoading","isFailed","isAuth","isLogoutChecked","loginSuccessAction","catch","LoginPage","_React$useState","React","useState","_React$useState2","slicedToArray","emailValue","setEmailValue","_React$useState3","_React$useState4","passwordValue","setPasswordValue","history","useHistory","register","useCallback","forgotPassword","styles","form","action","onSubmit","preventDefault","fieldset","onChange","target","size","additional_actions","additional_action","onClick","DraggableIngredient","ingredient","ingredientsCount","constructorIngredients","bun","ingredients","id","_id","setCount","find","itemId","count","startCount","_useDrag","useDrag","item","dragRef","ref","draggable","background","src","IngredientVariants","forwardRef","listOfIngredients","titleId","ingredientName","ingredientVariants","map","draggable_ingredient_DraggableIngredient","key","BurgerIngredients","currentTab","setCurrentTab","tabClick","tab","getElementById","scrollIntoView","behavior","block","_useInView","useInView","threshold","_useInView2","bunRef","inViewBun","_useInView3","_useInView4","sauceRef","inViewSauce","_useInView5","_useInView6","mainRef","inViewMain","useEffect","bunList","sauceList","mainList","allIngredients","items","filter","Fragment","burgerIngredients","section","active","FillingIngredient","index","useRef","uId","_useDrop","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","reorderIngredient","_useDrop2","drop","isDragging","_useDrag2","opacity","drag","data-handler-id","style","text","thumbnail","handleClose","deleteFromConstructor","ModalOverlay","onOverlayClick","modalOverlay","modalsContainer","querySelector","Modal","onClose","closeModal","onEscapeClick","event","addEventListener","removeEventListener","ReactDOM","createPortal","modal","modal_overlay_ModalOverlay","OrderDetails","orderNumber","orderDetails","orderId","getOrder","ingredientsIdArray","isOrderModalClosed","isOrderSent","isOrderRejected","Authorization","number","order","getOrderSuccessAction","console","log","status","BurgerConstructor","fillings","bunsPrice","useMemo","reduce","prevVal","curVal","uuidv4","addToConstructor","dropRef","_useSelector","placeOrder","push","forEach","filling","getIngredientsIdArray","burgerConstructor","compositionArea","isLocked","compositionChangebleList","i","filling_ingredient_FillingIngredient","currentIcon","modal_Modal","order_details_OrderDetails","ConstructorPage","DndProvider","backend","HTML5Backend","registerSuccessAction","RegisterPage","nameValue","setNameValue","_React$useState5","_React$useState6","inputRef","placeholder","icon","error","onIconClick","errorText","recoverPassword","resetPassword","newPassword","emailToken","ForgotPasswordPage","_useState","_useState2","setValue","_useState3","_useState4","cantResetPassword","setCantResetPassword","test","disabled","ResetPasswordPage","newPasswordValue","setNewPasswordValue","codeValue","setCodeValue","logout","ProfileMenu","signOut","getUser","getUserSuccessAction","editUser","newUserData","editUserSuccessAction","ProfilePage","loginValue","setLoginValue","setIsButtonsVisible","isNameError","setIsNameError","isEmailError","setIsEmailError","_useState5","_useState6","isPasswordError","setIsPasswordError","_useState7","_useState8","isInvalidInputs","setIsInvalidInputs","_useState9","_useState10","isButtonsVisible","validateName","validateEmail","validatePassword","clearEmailErrors","clearNameErrors","clearPasswordErrors","changeUserData","editCurrentUser","_callee2","_context2","_x2","formStyles","onFocus","onBlur","buttons_wrapper","buttons_wrapper_visible","IngredientMini","ingredientData","image_wrapper","OrderCard","moment","locale","calendar","lastDay","sameDay","sameElse","drawableIngredients","date","parse","createdAt","slice","priceArray","neededIngredient","cost","sum","path","useRouteMatch","order_data","utcOffset","order_header","ingredients_and_cost","ingredient_mini_IngredientMini","rest_ingredients","additional_quantity","shadow","cost_area","WS_CONNECTION_START","WS_CONNECTION_START_WITH_TOKEN","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_RESET_ERROR","wsActions","wsInit","wsInitWithToken","onOpen","onError","onMessage","wsResetError","wsInitWithTokenAction","payload","OrdersPage","ws","orders","wsConnected","total","totalToday","order_feed","order_card_OrderCard","IngredientDetails","useParams","currentIngredient","ingredientDetails","image_large","calories","proteins","fat","carbohydrates","IngredientPage","OrdersList","doneOrders","inProgressOrders","orders_list","order_done","FeedPage","columns","orders_info","status_ready","orders_list_OrdersList","status_in_progress","complete_all","complete_today","IngredientCard","amount","amount_and_price","FullOrderCard","currentOrder","currentStatus","uniqIngredientsObj","uniqIngredients","entries","composition","ingredients_area","ingredient_card_IngredientCard","time_and_cost","cost_field","OrderDetailsPage","secured","Page404","rights_link","href","getAllIngredients","App","wsUrl","closeIngredientModal","closeOrderModal","goBack","order_details_page_OrderDetailsPage","protected_route_ProtectedRoute","initialState","orderInitialState","constructorInitialState","rootReducer","combineReducers","arr","toConsumableArray","sameIndex","findIndex","sameElement","splice","spliceArr","update","$splice","allOrders","rightOrders","includes","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","WebSocket","close","onopen","onerror","onmessage","parsedData","restParsedData","onclose","createStore","StrictMode","es","app","someContainer","cover_image"],"mappings":"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","file":"static/js/main.b701a8fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"constructor-page_main__2cmA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ingredient-variants_list__X2Scw\",\"card\":\"ingredient-variants_card__1NQkn\",\"image\":\"ingredient-variants_image__1cNPR\",\"priceArea\":\"ingredient-variants_priceArea__3cUxI\",\"price\":\"ingredient-variants_price__3hiL9\",\"title\":\"ingredient-variants_title__1dSsn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"filling-ingredient_element__1mGml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__3nb6x\"};","module.exports = __webpack_public_path__ + \"static/media/done.04891082.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"order-details-page_main__K1Eiu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"profile-menu_menu__1lTJO\",\"nav_list\":\"profile-menu_nav_list__2rSE3\",\"nav_element\":\"profile-menu_nav_element__2HwXo\",\"nav_link\":\"profile-menu_nav_link__21S-5\",\"active_nav_link\":\"profile-menu_active_nav_link__RrhjD\",\"nav_button\":\"profile-menu_nav_button__2xYcm\",\"info\":\"profile-menu_info__1dqSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingredient-details_card__1uGau\",\"image\":\"ingredient-details_image__1gJT6\",\"nutritionalValue\":\"ingredient-details_nutritionalValue__2VXlS\",\"component\":\"ingredient-details_component__h2iHZ\",\"componentName\":\"ingredient-details_componentName__1obsM\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { AppDispatch, AppThunk, RootState } from './types';\r\n\r\n\r\n// export const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\nexport const useDispatch = () => dispatchHook<AppDispatch & AppThunk>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n","import React from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport appHeader from './app-header.module.css';\r\n\r\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ntype TLocationState = {\r\n  pathname: string\r\n};\r\n\r\nexport default function AppHeader() {\r\n\r\n  const {pathname} = useLocation<TLocationState>();\r\n\r\n  return (\r\n    <header className={`mt-10 ${appHeader.header}`}>\r\n      <nav className={`pb-4 pt-4 ${appHeader.menu}`} >\r\n        <div className={appHeader.menuLeftColumn}>\r\n          <NavLink to='/' exact={true} className={`text text_type_main-default pl-5 pr-5 pt-4 pb-4 ${appHeader.link}`} activeClassName={appHeader.active_nav_link}>\r\n            <BurgerIcon type={pathname === '/' ? 'primary' : 'secondary'} />\r\n            <span className=\"pl-2\">Конструктор</span>\r\n          </NavLink>\r\n          <NavLink to='/feed' exact={true} className={`text text_type_main-default pl-5 pr-5 pt-4 pb-4 ${appHeader.link}`} activeClassName={appHeader.active_nav_link}>\r\n            <ListIcon type={pathname === '/orders-history' ? 'primary' : 'secondary'}/>\r\n            <span className=\"pl-2\">Лента заказов</span>\r\n          </NavLink>\r\n        </div>\r\n        <NavLink to='/profile' className={`text text_type_main-default pl-5 pr-5 pt-4 pb-4 ${appHeader.link}`} activeClassName={appHeader.active_nav_link}>\r\n          <ProfileIcon type={(pathname === '/profile' || '/profile/orders') ? 'primary' : 'secondary'} />\r\n          <span className=\"pl-2\">Личный кабинет</span>\r\n        </NavLink>\r\n      </nav>\r\n      <NavLink to='/'>\r\n        <div className={appHeader.logo}>\r\n          <Logo />\r\n        </div>\r\n      </NavLink>\r\n    </header>\r\n  )\r\n}\r\n","import React, { ReactElement, ReactNode, FunctionComponent } from \"react\";\r\nimport { Route, Redirect, useLocation } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\n\r\ninterface IProtectedRouteProps {\r\n  path: string,\r\n  exact: boolean\r\n}\r\n\r\nexport const ProtectedRoute: FunctionComponent<IProtectedRouteProps> = ({ children, ...rest }) => {\r\n\r\n  const location = useLocation();\r\n\r\n  const { user } = useSelector(store => store.auth);\r\n\r\n  const {isAuthChecked} = useSelector(store => store.auth);\r\n\r\n  if (!isAuthChecked) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        user ? (\r\n          children\r\n        ) : (\r\n          <Redirect to={{\r\n            pathname: '/login',\r\n            state: { from: location }\r\n          }} />\r\n        )\r\n      }\r\n    />\r\n  )\r\n\r\n}\r\n","import { refreshToken } from \"../services/actions/refreshToken\";\r\nimport { TUser } from \"../services/types/server-data\";\r\n\r\nconst baseUrl: string = 'https://norma.nomoreparties.space/api';\r\nconst wsBaseUrl: string = 'wss://norma.nomoreparties.space';\r\nconst wsUrl: string = 'wss://norma.nomoreparties.space/orders/all';\r\nconst defaultBunUrl: string = \"https://code.s3.yandex.net/react/code/bun-02.png\";\r\n\r\nconst regExp = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\nfunction checkResponse<T>(res: Response): Promise<T> {\r\n  return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\r\n};\r\n\r\nfunction setCookie(name: string, value: string, props?: Record<string, string | number | Date | boolean>): void {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n  if (typeof exp == 'number' && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp instanceof Date && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + '=' + value;\r\n  for (const propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n};\r\n\r\nfunction getCookie(name: string): string | undefined {\r\n  const matches = document.cookie.match(\r\n    new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n};\r\n\r\n\r\nconst fetchWithRefresh = async (url: string, options: RequestInit = {}): Promise<{success: true; user: TUser}> => {\r\n  try {\r\n    const res: Response = await fetch(url, options);\r\n    const data: {success: true; user: TUser} = await checkResponse(res);\r\n    return data;\r\n  } catch (error) {\r\n    const err = error as Response;\r\n    const errorData = await err.json();\r\n    if (errorData.message === 'jwt expired') {\r\n      const currentRefreshToken = localStorage.getItem('refreshToken');\r\n      const newData: any = await refreshToken(currentRefreshToken);\r\n      const refreshData = await newData.json();\r\n      if (!refreshData.success) {\r\n        return Promise.reject(refreshData);\r\n      } else {\r\n        localStorage.setItem('refreshToken', refreshData.refreshToken);\r\n        setCookie('token', refreshData.accessToken.split('Bearer ')[1]);\r\n        const res = await fetch(url, {\r\n          ...options,\r\n            headers: {\r\n              ...options.headers,\r\n              Authotization: refreshData.accessToken\r\n            }\r\n        });\r\n        const data: {success: true; user: TUser} = await checkResponse(res);\r\n        return data;\r\n      }\r\n    } else {\r\n      return Promise.reject(err)\r\n    }\r\n  }\r\n};\r\n\r\nconst statuses: {\r\n  [key: string]: string\r\n} = {\r\n  done: 'Выполнен',\r\n  created: 'Создан',\r\n  pending: 'Готовится'\r\n}\r\n\r\n\r\nexport {baseUrl, wsBaseUrl, wsUrl, defaultBunUrl, regExp, checkResponse, setCookie, getCookie, fetchWithRefresh, statuses};\r\n\r\n","import {baseUrl, checkResponse} from '../../utils/utils';\r\nimport {REFRESH_TOKEN, REFRESH_TOKEN_SUCCESS, REFRESH_TOKEN_FAILED} from '../constants/index';\r\n\r\n\r\nconst refreshToken = (refreshToken: string | null) => {\r\n  return fetch(`${baseUrl}/auth/token`,\r\n    {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer',\r\n      body: JSON.stringify({\r\n        \"token\": refreshToken\r\n      })\r\n    }\r\n  )\r\n  .then(checkResponse)\r\n};\r\n\r\nexport {refreshToken};\r\n","const GET_ALL_INGREDIENTS: 'GET_ALL_INGREDIENTS' = 'GET_ALL_INGREDIENTS';\r\nconst GET_ALL_INGREDIENTS_SUCCESS: 'GET_ALL_INGREDIENTS_SUCCESS'  = 'GET_ALL_INGREDIENTS_SUCCESS';\r\nconst GET_ALL_INGREDIENTS_FAILED: 'GET_ALL_INGREDIENTS_FAILED' = 'GET_ALL_INGREDIENTS_FAILED';\r\n\r\nconst REORDER_INGREDIENT: 'REORDER_INGREDIENT' = 'REORDER_INGREDIENT';\r\nconst ADD_TO_CONSTRUCTOR: 'ADD_TO_CONSTRUCTOR' = 'ADD_TO_CONSTRUCTOR';\r\nconst DELETE_FROM_CONSTRUCTOR: 'DELETE_FROM_CONSTRUCTOR' = 'DELETE_FROM_CONSTRUCTOR';\r\n\r\nconst LOGIN: 'LOGIN' = 'LOGIN';\r\nconst LOGIN_SUCCESS: 'LOGIN_SUCCESS' = 'LOGIN_SUCCESS';\r\nconst LOGIN_FAILED: 'LOGIN_FAILED' = 'LOGIN_FAILED';\r\n\r\nconst LOGOUT: 'LOGOUT' = 'LOGOUT';\r\nconst LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\r\nconst LOGOUT_FAILED: 'LOGOUT_FAILED' = 'LOGOUT_FAILED';\r\n\r\nconst GET_ORDER: 'GET_ORDER' = 'GET_ORDER';\r\nconst GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nconst GET_ORDER_FAILED: 'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';\r\nconst CLOSE_ORDER: 'CLOSE_ORDER' = 'CLOSE_ORDER';\r\n\r\nconst RECOVER_PASSWORD: 'RECOVER_PASSWORD' = 'RECOVER_PASSWORD';\r\nconst RECOVER_PASSWORD_SUCCESS: 'RECOVER_PASSWORD_SUCCESS' = 'RECOVER_PASSWORD_SUCCESS';\r\nconst RECOVER_PASSWORD_FAILED: 'RECOVER_PASSWORD_FAILED' = 'RECOVER_PASSWORD_FAILED';\r\n\r\nconst RESET_PASSWORD: 'RESET_PASSWORD' = 'RESET_PASSWORD';\r\nconst RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\r\nconst RESET_PASSWORD_FAILED: 'RESET_PASSWORD_FAILED' = 'RESET_PASSWORD_FAILED';\r\n\r\nconst REFRESH_TOKEN: 'REFRESH_TOKEN' = 'REFRESH_TOKEN';\r\nconst REFRESH_TOKEN_SUCCESS: 'REFRESH_TOKEN_SUCCESS' = 'REFRESH_TOKEN_SUCCESS';\r\nconst REFRESH_TOKEN_FAILED: 'REFRESH_TOKEN_FAILED' = 'REFRESH_TOKEN_FAILED';\r\n\r\nconst REGISTER: 'REGISTER' = 'REGISTER';\r\nconst REGISTER_SUCCESS: 'REGISTER_SUCCESS' = 'REGISTER_SUCCESS';\r\nconst REGISTER_FAILED: 'REGISTER_FAILED' = 'REGISTER_FAILED';\r\n\r\nconst GET_USER: 'GET_USER' = 'GET_USER';\r\nconst GET_USER_SUCCESS: 'GET_USER_SUCCESS' = 'GET_USER_SUCCESS';\r\nconst GET_USER_FAILED: 'GET_USER_FAILED' = 'GET_USER_FAILED';\r\n\r\nconst EDIT_USER: 'EDIT_USER' = 'EDIT_USER';\r\nconst EDIT_USER_SUCCESS: 'EDIT_USER_SUCCESS' = 'EDIT_USER_SUCCESS';\r\nconst EDIT_USER_FAILED: 'EDIT_USER_FAILED' = 'EDIT_USER_FAILED';\r\n\r\n\r\n\r\nexport {GET_ALL_INGREDIENTS, GET_ALL_INGREDIENTS_SUCCESS, GET_ALL_INGREDIENTS_FAILED,\r\n  ADD_TO_CONSTRUCTOR, DELETE_FROM_CONSTRUCTOR, REORDER_INGREDIENT,\r\n  LOGIN, LOGIN_SUCCESS, LOGIN_FAILED,\r\n  LOGOUT, LOGOUT_SUCCESS, LOGOUT_FAILED,\r\n  GET_ORDER, GET_ORDER_SUCCESS, GET_ORDER_FAILED, CLOSE_ORDER,\r\n  RESET_PASSWORD, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAILED,\r\n  RECOVER_PASSWORD, RECOVER_PASSWORD_SUCCESS, RECOVER_PASSWORD_FAILED,\r\n  REFRESH_TOKEN, REFRESH_TOKEN_SUCCESS, REFRESH_TOKEN_FAILED,\r\n  REGISTER, REGISTER_SUCCESS, REGISTER_FAILED,\r\n  GET_USER, GET_USER_SUCCESS, GET_USER_FAILED, EDIT_USER, EDIT_USER_SUCCESS, EDIT_USER_FAILED\r\n};\r\n","import {baseUrl, checkResponse} from '../../utils/utils';\r\n\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nimport {LOGIN, LOGIN_SUCCESS, LOGIN_FAILED} from '../constants/index';\r\nimport { TUser } from '../types/server-data';\r\nimport { TLoginResponse } from '../types/server-data';\r\n\r\ninterface ILoginAction {\r\n  readonly type: typeof LOGIN,\r\n  readonly isLoading: true,\r\n  readonly isFailed: false,\r\n  readonly isAuth: false\r\n}\r\n\r\ninterface ILoginSuccessAction {\r\n  readonly type: typeof LOGIN_SUCCESS,\r\n  readonly isLoading: false,\r\n  readonly isFailed: false,\r\n  readonly user: TUser,\r\n  readonly accessToken: string,\r\n  readonly refreshToken: string,\r\n  readonly isAuth: true,\r\n  readonly isLogoutChecked: true\r\n}\r\n\r\ninterface ILoginFailedAction {\r\n  readonly type: typeof LOGIN_FAILED,\r\n  readonly isLoading: false,\r\n  readonly isFailed: true,\r\n  readonly isAuth: false,\r\n  readonly isLogoutChecked: true\r\n}\r\n\r\nexport type TLoginActions =\r\n  ILoginAction |\r\n  ILoginSuccessAction |\r\n  ILoginFailedAction\r\n;\r\n\r\nfunction loginAction(): ILoginAction {\r\n  return {\r\n    type: LOGIN,\r\n    isLoading: true,\r\n    isFailed: false,\r\n    isAuth: false\r\n  }\r\n};\r\n\r\nfunction loginSuccessAction(res: TLoginResponse): ILoginSuccessAction {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    isLoading: false,\r\n    isFailed: false,\r\n    user: res.user,\r\n    accessToken: res.accessToken,\r\n    refreshToken: res.refreshToken,\r\n    isAuth: true,\r\n    isLogoutChecked: true\r\n  }\r\n};\r\n\r\nfunction loginFailedAction(): ILoginFailedAction {\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    isLoading: false,\r\n    isFailed: true,\r\n    isAuth: false,\r\n    isLogoutChecked: true\r\n  }\r\n};\r\n\r\n\r\nconst login: AppThunk = (email: string, password: string) => {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch(loginAction())\r\n\r\n    fetch(`${baseUrl}/auth/login`,\r\n      {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify({\r\n          \"email\": email,\r\n          \"password\": password\r\n        })\r\n      }\r\n    )\r\n    .then(res => checkResponse<TLoginResponse>(res))\r\n    .then((res) =>\r\n      dispatch(loginSuccessAction(res))\r\n    )\r\n    .catch(err =>\r\n      dispatch(loginFailedAction())\r\n    )\r\n  }\r\n}\r\n\r\nexport {login};\r\n","import React, { useCallback, FormEvent } from \"react\";\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport {useHistory, useLocation, Redirect} from 'react-router-dom';\r\n\r\nimport styles from './inputs-pages.module.css';\r\n\r\nimport {Button, EmailInput, PasswordInput} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { login } from \"../services/actions/login\";\r\n\r\nimport { TEmptyFunction } from \"../services/types/utils\";\r\n\r\nexport default function LoginPage() {\r\n\r\n  const { user } = useSelector(store => store.auth);\r\n\r\n  const [emailValue, setEmailValue] = React.useState<string>('');\r\n  const [passwordValue, setPasswordValue] = React.useState<string>('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const location = useLocation<{from: string}>();\r\n\r\n  const register = useCallback<TEmptyFunction>(\r\n    () => {\r\n      history.replace({pathname: '/register'});\r\n    }, [history]\r\n  );\r\n\r\n  const forgotPassword = useCallback<TEmptyFunction>(\r\n    () => {\r\n      history.replace({pathname: '/forgot-password'})\r\n    }, [history]\r\n  );\r\n\r\n  function loginUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    dispatch(login(emailValue, passwordValue));\r\n  }\r\n\r\n  const { from } = location.state || { from: { pathname: '/' } };\r\n\r\n  const {isLogoutChecked} = useSelector(store => store.auth);\r\n\r\n  if (!isLogoutChecked) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <Redirect\r\n        to={from}\r\n      />\r\n    )\r\n  };\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <h1 className=\"text text_type_main-medium\">Вход</h1>\r\n\r\n      <form className={styles.form} action=\"\" onSubmit={loginUser}>\r\n        <fieldset className={styles.fieldset}>\r\n          <EmailInput\r\n            onChange={e => setEmailValue(e.target.value)}\r\n            value={emailValue}\r\n            name={'email'}\r\n          />\r\n          <PasswordInput\r\n            onChange={e => setPasswordValue(e.target.value)}\r\n            value={passwordValue}\r\n            name={'password'}\r\n          />\r\n        </fieldset>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Войти\r\n        </Button>\r\n      </form>\r\n\r\n      <div className={styles.additional_actions}>\r\n        <div className={styles.additional_action}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">Вы — новый пользователь?</p>\r\n          <Button type=\"secondary\" size=\"medium\" onClick={register}>\r\n            Зарегистрироваться\r\n          </Button>\r\n        </div>\r\n        <div className={styles.additional_action}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">Забыли пароль?</p>\r\n          <Button type=\"secondary\" size=\"medium\" onClick={forgotPassword}>\r\n            Восстановить пароль\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport styles from './draggable-ingredient.module.css';\r\n\r\nimport {Counter} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { TIngredient } from '../../services/types/server-data';\r\n\r\ninterface IDragIngProps {\r\n  ingredient: TIngredient\r\n}\r\n\r\nexport const DraggableIngredient: FunctionComponent<IDragIngProps> = ({ingredient}) => {\r\n\r\n  const ingredientsCount = useSelector(store => store.constructorIngredients.ingredientsCount);\r\n  const bun = useSelector(store => store.constructorIngredients.ingredients.bun);\r\n\r\n  const id = ingredient._id;\r\n\r\n  function setCount() {\r\n    if (bun !== null && bun._id === ingredient._id) {\r\n      const count = 1;\r\n      return count;\r\n    }\r\n    const count = ingredientsCount.find(element => element.itemId === ingredient._id) === undefined ?\r\n    null :\r\n    // @ts-ignore\r\n    ingredientsCount.find(element => element.itemId === ingredient._id).count;\r\n    return count;\r\n  };\r\n\r\n  const startCount = setCount();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation();\r\n\r\n  const [, dragRef] = useDrag({\r\n    type: 'ingredient',\r\n    item: ingredient\r\n  });\r\n\r\n  return (\r\n    <li className={` ${styles.card}`} ref={dragRef} draggable>\r\n      <Link className={styles.link} to={{pathname: `/ingredients/${id}`, state: {background: location}}}>\r\n        <img className={`ml-4 mr-4 ${styles.image}`} src={ingredient.image} />\r\n        { startCount &&\r\n          // @ts-ignore\r\n          <Counter count={setCount()} size=\"default\" />\r\n        }\r\n        <div className={styles.priceArea}>\r\n          <p className={`text text_type_digits-default ${styles.price}`}>{ingredient.price}</p>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n        <p className={`text text_type_main-default ${styles.title}`}>{ingredient.name}</p>\r\n      </Link>\r\n    </li>\r\n  )\r\n};\r\n","import React, {forwardRef}  from 'react';\r\n\r\nimport ingredientVariants from './ingredient-variants.module.css';\r\n\r\nimport { DraggableIngredient } from '../draggable-ingredient/draggable-ingredient';\r\nimport { TIngredient } from '../../services/types/server-data';\r\n\r\ninterface Props {\r\n  listOfIngredients: ReadonlyArray<TIngredient>,\r\n  titleId: string,\r\n  ingredientName: string,\r\n}\r\n\r\nexport type Ref = HTMLUListElement;\r\n\r\nexport const IngredientVariants = forwardRef<Ref, Props>((props, ref) => {\r\n  const ingredients = props.listOfIngredients;\r\n\r\n  return (\r\n    <section id={props.titleId}>\r\n      <h3 className=\"text text_type_main-medium\">{props.ingredientName}</h3>\r\n      <ul className={`pl-4 pr-4 pb-10 pt-6 ${ingredientVariants.list}`} ref={ref}>\r\n        {\r\n          ingredients.map((ingredient) => (\r\n            <DraggableIngredient key={ingredient._id} ingredient={ingredient}>\r\n            </DraggableIngredient>\r\n          ))\r\n        }\r\n      </ul>\r\n\r\n    </section>\r\n  )\r\n})\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nimport burgerIngredients from './burger-ingredients.module.css';\r\n\r\nimport {Tab} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport {IngredientVariants} from '../ingredient-variants/ingredient-variants';\r\nimport {Modal} from '../modal/modal';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport { TIngredient } from '../../services/types/server-data';\r\n\r\nexport default function BurgerIngredients() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentTab, setCurrentTab] = React.useState<string>('buns');\r\n\r\n  function tabClick(tab: string): void {\r\n    setCurrentTab(tab);\r\n    const element = document.getElementById(tab);\r\n\r\n    if (element !== null) {\r\n      element.scrollIntoView({behavior: 'smooth', block: 'start'});\r\n    }\r\n  };\r\n\r\n  const [bunRef, inViewBun] = useInView({\r\n    threshold: 0.1,\r\n  });\r\n\r\n  const [sauceRef, inViewSauce] = useInView({\r\n    threshold: 0.1,\r\n  });\r\n\r\n  const [mainRef, inViewMain] = useInView({\r\n    threshold: 0.1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (inViewBun) {\r\n      setCurrentTab('buns');\r\n    } else if (inViewSauce) {\r\n      setCurrentTab('sauces');\r\n    } else if (inViewMain) {\r\n      setCurrentTab('mains');\r\n    }\r\n  }, [inViewBun, inViewSauce, inViewMain]);\r\n\r\n\r\n  const listOfIngredients = useSelector(store => store.allIngredients.items);\r\n\r\n  let bunList;\r\n  let sauceList;\r\n  let mainList;\r\n\r\n  if (listOfIngredients !== null) {\r\n\r\n    bunList = listOfIngredients.filter((ingredient) => {\r\n      return ingredient.type === \"bun\";\r\n    })\r\n\r\n    sauceList = listOfIngredients.filter((ingredient) => {\r\n      return ingredient.type === \"sauce\";\r\n    })\r\n\r\n    mainList = listOfIngredients.filter((ingredient) => {\r\n      return ingredient.type === \"main\";\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className={burgerIngredients.section}>\r\n        <h2 className='text text_type_main-large mb-5 mt-10'>Соберите бургер</h2>\r\n        <nav className={`mb-10 ${burgerIngredients.menu}`}>\r\n          <Tab value=\"buns\" active={currentTab === 'buns'} onClick={tabClick}>\r\n            Булки\r\n          </Tab>\r\n          <Tab value=\"sauces\" active={currentTab === 'sauces'} onClick={tabClick}>\r\n            Соусы\r\n          </Tab>\r\n          <Tab value=\"mains\" active={currentTab === 'mains'} onClick={tabClick}>\r\n            Начинки\r\n          </Tab>\r\n        </nav>\r\n        {\r\n          bunList && sauceList && mainList &&\r\n          (\r\n            <article className={burgerIngredients.ingredients}>\r\n              <IngredientVariants ingredientName='Булки' listOfIngredients={bunList} titleId='buns' ref={bunRef}/>\r\n              <IngredientVariants ingredientName='Соусы' listOfIngredients={sauceList} titleId='sauces' ref={sauceRef}/>\r\n              <IngredientVariants ingredientName='Начинки' listOfIngredients={mainList} titleId='mains' ref={mainRef}/>\r\n            </article>\r\n          )\r\n        }\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, FunctionComponent }  from 'react';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport styles from './filling-ingredient.module.css';\r\n\r\nimport {ConstructorElement} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {DragIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport {deleteFromConstructor, reorderIngredient} from '../../services/actions/constructor-ingredients';\r\n\r\nimport { TIngredient } from '../../services/types/server-data';\r\n\r\ninterface IFillingIngProps {\r\n  item: TIngredient & {uId?: string},\r\n  index: number\r\n}\r\n\r\nexport const FillingIngredient: FunctionComponent<IFillingIngProps> = ({ item, index }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const ref = useRef<HTMLLIElement>(null);\r\n  const id = item.uId;\r\n\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: 'fillings',\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      };\r\n    },\r\n    hover(item: any, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n\r\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      const clientOffset: any = monitor.getClientOffset();\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      };\r\n\r\n      dispatch(reorderIngredient(dragIndex, hoverIndex));\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: 'fillings',\r\n    item: () => {\r\n      return { id, index };\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  drag(drop(ref));\r\n\r\n\r\n  return (\r\n    <li className={styles.element} draggable ref={ref} data-handler-id={handlerId} style={{ opacity }}>\r\n      <DragIcon type=\"primary\" />\r\n      <ConstructorElement\r\n        text={item.name}\r\n        price={item.price}\r\n        thumbnail={item.image}\r\n        handleClose={() => dispatch(deleteFromConstructor(item, index))}\r\n      />\r\n    </li>\r\n  )\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {ADD_TO_CONSTRUCTOR, DELETE_FROM_CONSTRUCTOR, REORDER_INGREDIENT} from '../constants/index';\r\nimport {TIngredient} from '../types/server-data';\r\n\r\ninterface IAddToConstructorAction {\r\n  readonly type: typeof ADD_TO_CONSTRUCTOR,\r\n  readonly item: TIngredient,\r\n  readonly uId: string\r\n}\r\n\r\ninterface IDeleteFromConstructorAction {\r\n  readonly type: typeof DELETE_FROM_CONSTRUCTOR,\r\n  readonly item: TIngredient,\r\n  readonly key: number\r\n}\r\n\r\ninterface IReorderIngredientAction {\r\n  readonly type: typeof REORDER_INGREDIENT,\r\n  readonly dragIndex: number,\r\n  readonly hoverIndex: number\r\n}\r\n\r\nexport type TIngredientInConstructorActions =\r\n  IAddToConstructorAction |\r\n  IDeleteFromConstructorAction |\r\n  IReorderIngredientAction\r\n;\r\n\r\n\r\nfunction addToConstructor(item: TIngredient): IAddToConstructorAction {\r\n  return {\r\n    type: ADD_TO_CONSTRUCTOR,\r\n    item: item,\r\n    uId: uuidv4()\r\n  }\r\n};\r\n\r\nfunction deleteFromConstructor(item: TIngredient, key: number): IDeleteFromConstructorAction {\r\n  return {\r\n    type: DELETE_FROM_CONSTRUCTOR,\r\n    item: item,\r\n    key: key\r\n  }\r\n};\r\n\r\nfunction reorderIngredient(dragIndex: number, hoverIndex: number): IReorderIngredientAction {\r\n  return {\r\n    type: REORDER_INGREDIENT,\r\n    dragIndex: dragIndex,\r\n    hoverIndex: hoverIndex\r\n  }\r\n};\r\n\r\nexport {addToConstructor, deleteFromConstructor, reorderIngredient};\r\n","import modalOverlay from './modal-overlay.module.css';\r\n\r\nimport React, { FunctionComponent }  from 'react';\r\n\r\ninterface IModalOverlayProps {\r\n  onOverlayClick: () => void\r\n}\r\n\r\nexport const ModalOverlay: FunctionComponent<IModalOverlayProps> = ({onOverlayClick}) => {\r\n  return (\r\n    <div className={modalOverlay.overlay} onClick={onOverlayClick}></div>\r\n  )\r\n}\r\n","import React, { useEffect, FunctionComponent, ReactNode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport modal from './modal.module.css'\r\n\r\nimport {CloseIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { ModalOverlay } from '../modal-overlay/modal-overlay';\r\n\r\n\r\nconst modalsContainer = document.querySelector('#modals');\r\n\r\ninterface IModalProps {\r\n  title?: string,\r\n  onClose: () => void,\r\n  children: ReactNode\r\n}\r\n\r\nexport const Modal: FunctionComponent<IModalProps> = ({title, onClose, children}) => {\r\n\r\n  function closeModal() {\r\n    onClose();\r\n  }\r\n\r\n\r\n  function onEscapeClick(event: KeyboardEvent) {\r\n    if (event.key === \"Escape\") {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  function onCrossClick() {\r\n    closeModal();\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      document.addEventListener('keydown', onEscapeClick);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', onEscapeClick);\r\n      }\r\n    }, []\r\n  )\r\n\r\n\r\n  return ReactDOM.createPortal(\r\n    (<>\r\n      <div className={modal.modal}>\r\n        <div className={`pt-10 pr-10 pl-10 ${modal.header}`}>\r\n          <h3 className={`text text_type_main-large ${modal.title}`}>{title}</h3>\r\n          <div onClick={onCrossClick}>\r\n            <CloseIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n        {children}\r\n      </div>\r\n\r\n\r\n      <ModalOverlay onOverlayClick={closeModal}/>\r\n    </>),\r\n\r\n    modalsContainer!\r\n  )\r\n};\r\n","import React, { FunctionComponent }  from 'react'\r\n\r\nimport orderDetails from './order-details.module.css';\r\n\r\nimport done from '../../images/done.png';\r\n\r\ninterface IOrderDetailsProps {\r\n  orderNumber: number | null\r\n}\r\n\r\nexport const OrderDetails: FunctionComponent<IOrderDetailsProps> = ({orderNumber}) => {\r\n\r\n  return (\r\n    <article className={orderDetails.card}>\r\n      <p className={`text text_type_digits-large ${orderDetails.orderId}`}>{orderNumber}</p>\r\n      <span className='mt-8 text text_type_main-medium'>идентификатор заказа</span>\r\n      <img className={`mt-15 mb-15 ${orderDetails.image}`} src={done}/>\r\n      <div className={`mb-30 ${orderDetails.info}`}>\r\n        <p className='text text_type_main-default'>Ваш заказ начали готовить</p>\r\n        <p className='text text_type_main-default text_color_inactive'>Дождитесь готовности на орбитальной станции</p>\r\n      </div>\r\n\r\n    </article>\r\n  )\r\n}\r\n","import {baseUrl, getCookie, checkResponse} from '../../utils/utils';\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nimport { GET_ORDER, GET_ORDER_SUCCESS, GET_ORDER_FAILED, CLOSE_ORDER } from '../constants/index';\r\nimport { TGetOrderResponse } from '../types/server-data';\r\n\r\ninterface IGetOrderAction {\r\n  readonly type: typeof GET_ORDER,\r\n  readonly isOrderModalClosed: true,\r\n  readonly isOrderSent: true,\r\n  readonly isOrderRejected: false\r\n}\r\n\r\ninterface IGetOrderSuccessAction {\r\n  readonly type: typeof GET_ORDER_SUCCESS,\r\n  readonly isOrderModalClosed: false,\r\n  readonly isOrderSent: false,\r\n  readonly isOrderRejected: false,\r\n  readonly number: number\r\n}\r\n\r\ninterface IGetOrderFailedAction {\r\n  readonly type: typeof GET_ORDER_FAILED,\r\n  readonly isOrderModalClosed: true,\r\n  readonly isOrderSent: false,\r\n  readonly isOrderRejected: true\r\n}\r\n\r\nfunction getOrderAction(): IGetOrderAction {\r\n  return {\r\n    type: GET_ORDER,\r\n    isOrderModalClosed: true,\r\n    isOrderSent: true,\r\n    isOrderRejected: false,\r\n  }\r\n};\r\n\r\nfunction getOrderSuccessAction(res: TGetOrderResponse): IGetOrderSuccessAction {\r\n  return {\r\n    type: GET_ORDER_SUCCESS,\r\n    isOrderModalClosed: false,\r\n    isOrderSent: false,\r\n    isOrderRejected: false,\r\n    number: res.order.number\r\n  }\r\n};\r\n\r\nfunction getOrderFailedAction(): IGetOrderFailedAction {\r\n  return {\r\n    type: GET_ORDER_FAILED,\r\n    isOrderModalClosed: true,\r\n    isOrderSent: false,\r\n    isOrderRejected: true\r\n  }\r\n};\r\n\r\n\r\nconst getOrder: AppThunk = (ingredientsIdArray: Array<string>) => {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch(getOrderAction())\r\n\r\n    fetch(`${baseUrl}/orders`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        Authorization: 'Bearer ' + getCookie('token')\r\n      },\r\n      body: JSON.stringify({\r\n        \"ingredients\": ingredientsIdArray\r\n      })\r\n    })\r\n    .then(res => checkResponse<TGetOrderResponse>(res))\r\n    .then(res => {\r\n      dispatch(getOrderSuccessAction(res))\r\n    })\r\n    .catch(err => {console.log(err, err.status);\r\n      dispatch(getOrderFailedAction())\r\n    })\r\n  }\r\n}\r\n\r\ninterface ICloseOrderAction {\r\n  readonly type: typeof CLOSE_ORDER,\r\n  readonly isOrderModalClosed: true,\r\n  readonly number: null\r\n}\r\n\r\nexport type TOrderActions =\r\n  IGetOrderAction |\r\n  IGetOrderSuccessAction |\r\n  IGetOrderFailedAction |\r\n  ICloseOrderAction\r\n;\r\n\r\nfunction closeOrder(): ICloseOrderAction {\r\n  return {\r\n    type: CLOSE_ORDER,\r\n    isOrderModalClosed: true,\r\n    number: null\r\n  }\r\n}\r\n\r\nexport { getOrder, closeOrder };\r\n","import React, { useMemo } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport burgerConstructor from './burger-constructor.module.css';\r\n\r\nimport { FillingIngredient } from '../filling-ingredient/filling-ingredient';\r\nimport { Modal } from '../modal/modal';\r\nimport { OrderDetails } from '../order-details/order-details';\r\n\r\nimport {ConstructorElement} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {Button} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { addToConstructor } from '../../services/actions/constructor-ingredients';\r\nimport {getOrder} from '../../services/actions/order';\r\nimport { closeOrder} from '../../services/actions/order';\r\nimport { TIngredient } from '../../services/types/server-data';\r\n\r\n\r\nexport default function BurgerConstructor () {\r\n\r\n  const constructorIngredients = useSelector(store => store.constructorIngredients.ingredients.fillings);\r\n\r\n  const bun = useSelector(store => store.constructorIngredients.ingredients.bun);\r\n\r\n  const bunsPrice = bun === null ?\r\n  0 :\r\n  bun.price * 2;\r\n\r\n  const isOrderRejected = useSelector(store => store.order.isOrderRejected);\r\n  const isOrderModalClosed = useSelector(store => store.order.isOrderModalClosed);\r\n  const orderNumber = useSelector(store => store.order.number);\r\n\r\n  function getIngredientsIdArray() {\r\n    const ingredientsIdArray = [];\r\n    if (bun !== null) {\r\n      ingredientsIdArray.push(bun._id)\r\n    };\r\n    constructorIngredients.forEach((filling) => {\r\n      ingredientsIdArray.push(filling._id);\r\n    });\r\n    if (bun !== null) {\r\n      ingredientsIdArray.push(bun._id)\r\n    };\r\n\r\n    return ingredientsIdArray;\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const price = useMemo(() => {\r\n    return (\r\n      constructorIngredients.reduce((prevVal, curVal) => prevVal + curVal.price, bunsPrice)\r\n    );\r\n  }, [constructorIngredients]);\r\n\r\n  const [, dropRef] = useDrop({\r\n    accept: 'ingredient',\r\n    drop(item: TIngredient): void {\r\n      dispatch(addToConstructor(item))\r\n    }\r\n  });\r\n\r\n  const { isAuth, isAuthChecked } = useSelector(store => store.auth);\r\n  const history = useHistory();\r\n\r\n  function placeOrder() {\r\n    if (!isAuth && isAuthChecked) {\r\n\r\n      history.replace({pathname: '/login'})\r\n    } else {\r\n      dispatch(getOrder(getIngredientsIdArray()));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className={`${burgerConstructor.section} pt-20`}>\r\n        <article className={`${burgerConstructor.compositionArea} pt-5`} ref={dropRef}>\r\n          {\r\n            bun &&\r\n            <ConstructorElement\r\n            type=\"top\"\r\n            isLocked={true}\r\n            text={`${bun.name} (верх)`}\r\n            price={bun.price}\r\n            thumbnail={bun.image}\r\n            />\r\n          }\r\n          <ul className={burgerConstructor.compositionChangebleList}>\r\n\r\n              {constructorIngredients && constructorIngredients.map((ingredient, i) => (\r\n\r\n                <FillingIngredient item={ingredient} index={i} key={ingredient.uId}>\r\n                </FillingIngredient>\r\n              ))}\r\n\r\n          </ul>\r\n          {\r\n            bun &&\r\n            <ConstructorElement\r\n            type=\"bottom\"\r\n            isLocked={true}\r\n            text={`${bun.name} (низ)`}\r\n            price={bun.price}\r\n            thumbnail={bun.image}\r\n            />\r\n          }\r\n        </article>\r\n        <article className={`mt-10 ${burgerConstructor.info}`}>\r\n          <div className={burgerConstructor.priceArea}>\r\n            <p className=\"text text_type_digits-medium\">\r\n              {\r\n                price\r\n              }\r\n            </p>\r\n            <div className={burgerConstructor.currentIcon}>\r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </div>\r\n          <Button type=\"primary\" size=\"large\" onClick={() => {placeOrder()}}>\r\n            Оформить заказ\r\n          </Button>\r\n        </article>\r\n      </section>\r\n\r\n      {\r\n        !isOrderRejected &&\r\n        !isOrderModalClosed &&\r\n        (\r\n          <Modal\r\n            title=\"\"\r\n            onClose={() => dispatch(closeOrder())}\r\n          >\r\n            <OrderDetails\r\n              orderNumber={orderNumber}\r\n            />\r\n          </Modal>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\n\r\nimport styles from './constructor-page.module.css';\r\n\r\nimport BurgerIngredients from '../../components/burger-ingredients/burger-ingredients';\r\nimport BurgerConstructor from '../../components/burger-constructor/burger-constructor';\r\n\r\nexport default function ConstructorPage() {\r\n\r\n  const {isLoading, isFailed} = useSelector(store => store.allIngredients);\r\n  const listOfIngredients = useSelector(store => store.allIngredients.items);\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <DndProvider backend={HTML5Backend}>\r\n\r\n      {\r\n        isLoading && <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n      }\r\n      {\r\n        isFailed && <p className=\"text text_type_main-medium\">Не удаётся загрузить данные. Пожалуйста, повторите попытку</p>\r\n      }\r\n      {\r\n        listOfIngredients &&\r\n        <>\r\n          <BurgerIngredients />\r\n          <BurgerConstructor />\r\n        </>\r\n      }\r\n      </DndProvider>\r\n    </main>\r\n  )\r\n}\r\n","import {baseUrl, checkResponse} from '../../utils/utils';\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nimport {REGISTER, REGISTER_SUCCESS, REGISTER_FAILED} from '../constants/index';\r\nimport { TUser } from '../types/server-data';\r\nimport { TRegistrationResponse } from '../types/server-data';\r\n\r\ninterface IRegisterAction {\r\n  readonly type: typeof REGISTER,\r\n  readonly isLoading: true,\r\n  readonly isFailed: false,\r\n  readonly isAuth: false\r\n}\r\n\r\ninterface IRegisterSuccessAction {\r\n  readonly type: typeof REGISTER_SUCCESS,\r\n  readonly isLoading: false,\r\n  readonly isFailed: false,\r\n  readonly user: TUser,\r\n  readonly accessToken: string,\r\n  readonly refreshToken: string,\r\n  readonly isAuth: true\r\n}\r\n\r\ninterface IRegisterFailedAction {\r\n  readonly type: typeof REGISTER_FAILED,\r\n  readonly isLoading: false,\r\n  readonly isFailed: true,\r\n  readonly isAuth: false\r\n}\r\n\r\nexport type TRegisterActions =\r\n  IRegisterAction |\r\n  IRegisterSuccessAction |\r\n  IRegisterFailedAction\r\n;\r\n\r\nfunction registerAction(): IRegisterAction {\r\n  return {\r\n    type: REGISTER,\r\n    isLoading: true,\r\n    isFailed: false,\r\n    isAuth: false\r\n  }\r\n};\r\n\r\nfunction registerSuccessAction(res: TRegistrationResponse): IRegisterSuccessAction {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n    isLoading: false,\r\n    isFailed: false,\r\n    user: res.user,\r\n    accessToken: res.accessToken,\r\n    refreshToken: res.refreshToken,\r\n    isAuth: true\r\n  }\r\n};\r\n\r\nfunction registerFailedAction(): IRegisterFailedAction {\r\n  return {\r\n    type: REGISTER_FAILED,\r\n    isLoading: false,\r\n    isFailed: true,\r\n    isAuth: false\r\n  }\r\n};\r\n\r\n\r\nconst register: AppThunk = (name: string, email: string, password: string) => {\r\n\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch(registerAction())\r\n\r\n    fetch(`${baseUrl}/auth/register`,\r\n      {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify({\r\n          \"email\": email,\r\n          \"password\": password,\r\n          \"name\": name\r\n        })\r\n      }\r\n    )\r\n    .then(res => checkResponse<TRegistrationResponse>(res))\r\n    .then(res =>\r\n      dispatch(registerSuccessAction(res))\r\n    )\r\n    .catch(err =>\r\n      dispatch(registerFailedAction())\r\n    )\r\n  }\r\n}\r\n\r\nexport {register};\r\n","import React, { useRef, useCallback, FormEvent} from \"react\";\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport {useHistory, Redirect} from 'react-router-dom';\r\n\r\nimport styles from './inputs-pages.module.css';\r\n\r\nimport {Input, Button, EmailInput, PasswordInput} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { register } from \"../services/actions/register\";\r\n\r\nimport { TEmptyFunction } from \"../services/types/utils\";\r\n\r\nexport default function RegisterPage() {\r\n\r\n  const { user } = useSelector(store => store.auth);\r\n\r\n  const [nameValue, setNameValue] = React.useState<string>('');\r\n  const [emailValue, setEmailValue] = React.useState<string>('');\r\n  const [passwordValue, setPasswordValue] = React.useState<string>('');\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const onIconClick = () => {\r\n    // setTimeout(() => inputRef.current.focus(), 0)\r\n    // alert('Icon Click Callback')\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const login = useCallback<TEmptyFunction>(\r\n    () => {\r\n      history.replace({pathname: '/login'})\r\n    }, [history]\r\n  );\r\n\r\n  function createUser(e: FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    dispatch(register(nameValue, emailValue, passwordValue));\r\n  }\r\n\r\n  if (user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/'\r\n        }}\r\n      />\r\n    )\r\n  };\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <h1 className=\"text text_type_main-medium\">Регистрация</h1>\r\n\r\n      <form className={styles.form} action=\"\" onSubmit={createUser}>\r\n        <fieldset className={styles.fieldset}>\r\n          <Input\r\n              type={'text'}\r\n              placeholder={'Имя'}\r\n              onChange={e => setNameValue(e.target.value)}\r\n              icon={'CurrencyIcon'}\r\n              value={nameValue}\r\n              name={'name'}\r\n              error={false}\r\n              ref={inputRef}\r\n              onIconClick={onIconClick}\r\n              errorText={'Ошибка'}\r\n              size={'default'}\r\n            />\r\n            <EmailInput\r\n              onChange={e => setEmailValue(e.target.value)}\r\n              value={emailValue}\r\n              name={'email'}\r\n            />\r\n            <PasswordInput\r\n              onChange={e => setPasswordValue(e.target.value)}\r\n              value={passwordValue}\r\n              name={'password'}\r\n            />\r\n        </fieldset>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Зарегистрироваться\r\n        </Button>\r\n      </form>\r\n\r\n      <div className={styles.additional_actions}>\r\n        <div className={styles.additional_action}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">Уже зарегистрированы?</p>\r\n          <Button type=\"secondary\" size=\"medium\" onClick={login}>\r\n            Войти\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n","import {baseUrl, checkResponse} from '../../utils/utils';\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nimport {RESET_PASSWORD, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAILED,\r\n  RECOVER_PASSWORD, RECOVER_PASSWORD_SUCCESS, RECOVER_PASSWORD_FAILED} from '../constants/index';\r\n\r\ninterface IRecoverPasswordAction {\r\n  readonly type: typeof RECOVER_PASSWORD\r\n}\r\n\r\ninterface IRecoverPasswordSuccessAction {\r\n  readonly type: typeof RECOVER_PASSWORD_SUCCESS\r\n}\r\n\r\ninterface IRecoverPasswordFailedAction {\r\n  readonly type: typeof RECOVER_PASSWORD_FAILED\r\n}\r\n\r\ninterface IResetPasswordAction {\r\n  readonly type: typeof RESET_PASSWORD\r\n}\r\n\r\ninterface IResetPasswordSuccessAction {\r\n  readonly type: typeof RESET_PASSWORD_SUCCESS\r\n}\r\n\r\ninterface IResetPasswordFailedAction {\r\n  readonly type: typeof RESET_PASSWORD_FAILED\r\n}\r\n\r\nexport type TPasswordActions =\r\n  IRecoverPasswordAction |\r\n  IRecoverPasswordSuccessAction |\r\n  IRecoverPasswordFailedAction |\r\n  IResetPasswordAction |\r\n  IResetPasswordSuccessAction |\r\n  IResetPasswordFailedAction\r\n;\r\n\r\nfunction recoverPasswordAction(): IRecoverPasswordAction {\r\n  return {\r\n    type: RECOVER_PASSWORD,\r\n  }\r\n};\r\n\r\nfunction recoverPasswordSuccessAction(): IRecoverPasswordSuccessAction {\r\n  return {\r\n    type: RECOVER_PASSWORD_SUCCESS,\r\n  }\r\n};\r\n\r\nfunction recoverPasswordFailedAction(): IRecoverPasswordFailedAction {\r\n  return {\r\n    type: RECOVER_PASSWORD_FAILED,\r\n  }\r\n};\r\n\r\nfunction resetPasswordAction(): IResetPasswordAction {\r\n  return {\r\n    type: RESET_PASSWORD,\r\n  }\r\n};\r\n\r\nfunction resetPasswordSuccessAction(): IResetPasswordSuccessAction {\r\n  return {\r\n    type: RESET_PASSWORD_SUCCESS,\r\n  }\r\n};\r\n\r\nfunction resetPasswordFailedAction(): IResetPasswordFailedAction {\r\n  return {\r\n    type: RESET_PASSWORD_FAILED,\r\n  }\r\n};\r\n\r\n\r\nconst recoverPassword: AppThunk = (email: string) => {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch(recoverPasswordAction())\r\n\r\n    fetch(`${baseUrl}/password-reset`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n          \"email\": email\r\n        })\r\n      }\r\n    )\r\n    .then(checkResponse)\r\n    .then(res =>\r\n      dispatch(recoverPasswordSuccessAction())\r\n    )\r\n    .catch(err =>\r\n      dispatch(recoverPasswordFailedAction())\r\n    )\r\n  }\r\n};\r\n\r\nconst resetPassword: AppThunk = (newPassword: string, emailToken: string) => {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch(resetPasswordAction())\r\n\r\n    fetch(`${baseUrl}/password-reset/reset`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n          \"password\": newPassword,\r\n          \"token\": emailToken\r\n        })\r\n      }\r\n    )\r\n    .then(checkResponse)\r\n    .then(res =>\r\n      dispatch(resetPasswordSuccessAction())\r\n    )\r\n    .catch(err =>\r\n      dispatch(resetPasswordFailedAction())\r\n    )\r\n  }\r\n}\r\n\r\nexport {recoverPassword, resetPassword};\r\n","import React, { useState, useRef, useCallback, FormEvent } from \"react\";\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport {useHistory, Redirect, useLocation} from 'react-router-dom';\r\n\r\nimport styles from './inputs-pages.module.css';\r\n\r\nimport {Button, Input} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport {regExp} from '../utils/utils';\r\n\r\nimport { recoverPassword } from \"../services/actions/password\";\r\nimport { TEmptyFunction } from \"../services/types/utils\";\r\n\r\nexport default function ForgotPasswordPage() {\r\n\r\n  const { user } = useSelector(store => store.auth);\r\n  const [value, setValue] = useState<string>('');\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const onIconClick = () => {\r\n  };\r\n\r\n  const [cantResetPassword, setCantResetPassword] = useState(true);\r\n\r\n  function validateEmail() {\r\n    if (regExp.test(value)) {\r\n      setCantResetPassword(false)\r\n    } else {\r\n      setCantResetPassword(true)\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation<string>();\r\n\r\n  const login = useCallback<TEmptyFunction>(\r\n    () => {\r\n      history.replace({pathname: '/login'})\r\n    }, [history]\r\n  );\r\n\r\n  function recover(e: FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    (async () => {\r\n      await dispatch(recoverPassword(value));\r\n      history.replace({pathname: '/reset-password', state: { from: location }})\r\n    })();\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/'\r\n        }}\r\n      />\r\n    )\r\n  };\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <h1 className=\"text text_type_main-medium\">Восстановление пароля</h1>\r\n\r\n      <form className={styles.form} action=\"\" onSubmit={recover}>\r\n        <fieldset className={styles.fieldset}>\r\n          <Input\r\n            type={'email'}\r\n            placeholder={'Укажите e-mail'}\r\n            onChange={e => {setValue(e.target.value); validateEmail()}}\r\n            icon={'EditIcon'}\r\n            value={value}\r\n            name={'name'}\r\n            error={false}\r\n            ref={inputRef}\r\n            onIconClick={onIconClick}\r\n            errorText={'Ошибка'}\r\n            size={'default'}\r\n          />\r\n        </fieldset>\r\n        <Button type=\"primary\" size=\"medium\" disabled={cantResetPassword}>\r\n          Восстановить\r\n        </Button>\r\n      </form>\r\n\r\n      <div className={styles.additional_actions}>\r\n        <div className={styles.additional_action}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">Вспомнили пароль?</p>\r\n          <Button type=\"secondary\" size=\"medium\" onClick={login}>\r\n            Войти\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n","import React, { useRef, useCallback, FormEvent} from \"react\";\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport {useHistory, Redirect, useLocation} from 'react-router-dom';\r\n\r\nimport styles from './inputs-pages.module.css';\r\n\r\nimport {Button, Input} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { resetPassword } from \"../services/actions/password\";\r\n\r\nimport { TEmptyFunction } from \"../services/types/utils\";\r\n\r\nexport default function ResetPasswordPage() {\r\n\r\n  const { user } = useSelector(store => store.auth);\r\n\r\n  const [newPasswordValue, setNewPasswordValue] = React.useState<string>('');\r\n  const [codeValue, setCodeValue] = React.useState<string>('');\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const onIconClick = () => {\r\n    // setTimeout(() => inputRef.current.focus(), 0)\r\n    // alert('Icon Click Callback')\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation<{from: {pathname: string}}>();\r\n\r\n  const { from } = location.state || { from: { pathname: '/' } };\r\n\r\n  if (from.pathname !== '/forgot-password') {\r\n    return (\r\n      <Redirect\r\n        to={from}\r\n      />\r\n    )\r\n  };\r\n\r\n  const login = useCallback<TEmptyFunction>(\r\n    () => {\r\n      history.replace({pathname: '/login'})\r\n    }, [history]\r\n  );\r\n\r\n  function changePassword(e: FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n\r\n    (async () => {\r\n      await dispatch(resetPassword(newPasswordValue, codeValue));\r\n      history.replace({pathname: '/profile'});\r\n    })();\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/'\r\n        }}\r\n      />\r\n    )\r\n  };\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <h1 className=\"text text_type_main-medium\">Восстановление пароля</h1>\r\n\r\n      <form className={styles.form} action=\"\" onSubmit={changePassword}>\r\n        <fieldset className={styles.fieldset}>\r\n          <Input\r\n            type={'password'}\r\n            placeholder={'Введите новый пароль'}\r\n            onChange={e => setNewPasswordValue(e.target.value)}\r\n            icon={'ShowIcon'}\r\n            value={newPasswordValue}\r\n            name={'name'}\r\n            error={false}\r\n            ref={inputRef}\r\n            onIconClick={onIconClick}\r\n            errorText={'Ошибка'}\r\n            size={'default'}\r\n          />\r\n          <Input\r\n            type={'text'}\r\n            placeholder={'Введите код из письма'}\r\n            onChange={e => setCodeValue(e.target.value)}\r\n            icon={'EditIcon'}\r\n            value={codeValue}\r\n            name={'name'}\r\n            error={false}\r\n            ref={inputRef}\r\n            onIconClick={onIconClick}\r\n            errorText={'Ошибка'}\r\n            size={'default'}\r\n          />\r\n        </fieldset>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Сохранить\r\n        </Button>\r\n      </form>\r\n\r\n      <div className={styles.additional_actions}>\r\n        <div className={styles.additional_action}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">Вспомнили пароль?</p>\r\n          <Button type=\"secondary\" size=\"medium\" onClick={login}>\r\n            Войти\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n};\r\n","import {baseUrl, checkResponse} from '../../utils/utils';\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nimport {LOGOUT, LOGOUT_SUCCESS, LOGOUT_FAILED} from '../constants/index';\r\n\r\ninterface ILogoutAction {\r\n  readonly type: typeof LOGOUT,\r\n  readonly isLogoutChecked: false\r\n}\r\n\r\ninterface ILogoutSuccessAction {\r\n  readonly type: typeof LOGOUT_SUCCESS,\r\n  readonly user: null,\r\n  readonly accessToken: null,\r\n  readonly isAuth: false,\r\n  readonly isAuthChecked: true,\r\n  readonly isLogoutChecked: true\r\n}\r\n\r\ninterface ILogoutFailedAction {\r\n  readonly type: typeof LOGOUT_FAILED,\r\n  readonly isLogoutChecked: true\r\n}\r\n\r\nexport type TLogoutActions =\r\n  ILogoutAction |\r\n  ILogoutSuccessAction |\r\n  ILogoutFailedAction\r\n;\r\n\r\nfunction logoutAction(): ILogoutAction {\r\n  return {\r\n    type: LOGOUT,\r\n    isLogoutChecked: false\r\n  }\r\n};\r\n\r\nfunction logoutSuccessAction(): ILogoutSuccessAction {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n    user: null,\r\n    accessToken: null,\r\n    isAuth: false,\r\n    isAuthChecked: true,\r\n    isLogoutChecked: true\r\n  }\r\n};\r\n\r\nfunction logoutFailedAction(): ILogoutFailedAction {\r\n  return {\r\n    type: LOGOUT_FAILED,\r\n    isLogoutChecked: true\r\n  }\r\n};\r\n\r\nconst logout: AppThunk = () => {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch(logoutAction())\r\n\r\n    fetch(`${baseUrl}/auth/logout`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          \"token\": localStorage.getItem('refreshToken')\r\n        })\r\n      }\r\n    )\r\n    .then(checkResponse)\r\n    .then(res => {\r\n      dispatch(logoutSuccessAction())\r\n    })\r\n    .catch(err => {\r\n      dispatch(logoutFailedAction())\r\n    })\r\n  }\r\n}\r\n\r\nexport {logout};\r\n","import React from \"react\";\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport styles from './profile-menu.module.css';\r\n\r\nimport { logout } from \"../../services/actions/logout\";\r\nimport { setCookie, getCookie } from \"../../utils/utils\";\r\n\r\nexport default function ProfileMenu() {\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const signOut = async () => {\r\n    await dispatch(logout());\r\n  };\r\n\r\n  const logoutFromAccount = () => {\r\n    signOut().then(() => {\r\n      setCookie('token', '', { expires: -1 });\r\n      history.replace({ pathname: '/login' });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.menu}>\r\n      <nav>\r\n        <ul className={styles.nav_list}>\r\n          <li className={`${styles.nav_element}`}>\r\n            <NavLink to={'/profile'} exact={true} className={`text text_type_main-medium ${styles.nav_link}`} activeClassName={styles.active_nav_link}>Профиль</NavLink>\r\n          </li>\r\n          <li className={`${styles.nav_element}`}>\r\n            <NavLink to={'/profile/orders'} exact={true} className={`text text_type_main-medium ${styles.nav_link}`} activeClassName={styles.active_nav_link}>История заказов</NavLink>\r\n          </li>\r\n          <li className={`${styles.nav_element}`}>\r\n            <button className={`text text_type_main-medium ${styles.nav_button}`} onClick={logoutFromAccount}>Выход</button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <p className={`${styles.info} text text_type_main-default text_color_inactive`}>\r\n        В этом разделе вы можете изменить свои персональные данные\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n","import {baseUrl, getCookie, fetchWithRefresh} from '../../utils/utils';\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nimport {GET_USER, GET_USER_SUCCESS, GET_USER_FAILED, EDIT_USER, EDIT_USER_SUCCESS, EDIT_USER_FAILED} from '../constants/index';\r\nimport { TUser } from '../types/server-data';\r\n\r\ninterface IGetUserAction {\r\n  readonly type: typeof GET_USER,\r\n  readonly isAuth: false,\r\n  readonly isAuthChecked: false\r\n}\r\n\r\ninterface IGetUserSuccessAction {\r\n  readonly type: typeof GET_USER_SUCCESS,\r\n  readonly user: TUser,\r\n  readonly isAuth: true,\r\n  readonly isAuthChecked: true,\r\n  readonly isLogoutChecked: true\r\n}\r\n\r\ninterface IGetUserFailedAction {\r\n  readonly type: typeof GET_USER_FAILED,\r\n  readonly isAuth: false,\r\n  readonly isAuthChecked: true,\r\n  readonly isLogoutChecked: true\r\n}\r\n\r\ninterface IEditUserAction {\r\n  readonly type: typeof EDIT_USER\r\n}\r\n\r\ninterface IEditUserSuccessAction {\r\n  readonly type: typeof EDIT_USER_SUCCESS,\r\n  readonly user: TUser\r\n}\r\n\r\ninterface IEditUserFailedAction {\r\n  readonly type: typeof EDIT_USER_FAILED\r\n}\r\n\r\nexport type TUserActions =\r\n  IGetUserAction |\r\n  IGetUserSuccessAction |\r\n  IGetUserFailedAction |\r\n  IEditUserAction |\r\n  IEditUserSuccessAction |\r\n  IEditUserFailedAction\r\n;\r\n\r\nfunction getUserAction(): IGetUserAction {\r\n  return {\r\n    type: GET_USER,\r\n    isAuth: false,\r\n    isAuthChecked: false\r\n  }\r\n};\r\n\r\nfunction getUserSuccessAction(res: {success: true; user: TUser}): IGetUserSuccessAction {\r\n  return {\r\n    type: GET_USER_SUCCESS,\r\n    user: res.user,\r\n    isAuth: true,\r\n    isAuthChecked: true,\r\n    isLogoutChecked: true\r\n  }\r\n};\r\n\r\nfunction getUserFailedAction(): IGetUserFailedAction {\r\n  return {\r\n    type: GET_USER_FAILED,\r\n    isAuth: false,\r\n    isAuthChecked: true,\r\n    isLogoutChecked: true\r\n  }\r\n};\r\n\r\nfunction editUserAction(): IEditUserAction {\r\n  return {\r\n    type: EDIT_USER\r\n  }\r\n};\r\n\r\nfunction editUserSuccessAction(res: {success: true; user: TUser}): IEditUserSuccessAction {\r\n  return {\r\n    type: EDIT_USER_SUCCESS,\r\n    user: res.user\r\n  }\r\n};\r\n\r\nfunction editUserFailedAction(): IEditUserFailedAction {\r\n  return {\r\n    type: EDIT_USER_FAILED\r\n  }\r\n};\r\n\r\n\r\nconst getUser: AppThunk = () => {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch(getUserAction())\r\n    fetchWithRefresh(`${baseUrl}/auth/user`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + getCookie('token')\r\n      }\r\n    })\r\n    .then(res =>\r\n      dispatch(getUserSuccessAction(res))\r\n    )\r\n    .catch(err =>\r\n      dispatch(getUserFailedAction())\r\n    )\r\n  }\r\n};\r\n\r\nconst editUser : AppThunk = (newUserData: {name: string; email: string; password: string}) => {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch(editUserAction())\r\n\r\n    fetchWithRefresh(`${baseUrl}/auth/user`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + getCookie('token')\r\n      },\r\n      body: JSON.stringify(\r\n        newUserData\r\n      )\r\n    })\r\n    .then(res =>\r\n      dispatch(editUserSuccessAction(res))\r\n    )\r\n    .catch(err =>\r\n      dispatch(editUserFailedAction())\r\n    )\r\n  }\r\n}\r\n\r\nexport {getUser, editUser};\r\n","import React, { useRef, useEffect, useState, MouseEvent, FormEvent } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\n\r\nimport styles from './profile-page.module.css';\r\nimport formStyles from '../inputs-pages.module.css';\r\n\r\nimport { Input, Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport ProfileMenu from '../../components/profile-menu/profile-menu';\r\nimport { editUser } from \"../../services/actions/user\";\r\nimport { regExp } from \"../../utils/utils\";\r\n\r\n\r\nexport default function ProfilePage() {\r\n\r\n  const [nameValue, setNameValue] = React.useState<string>('');\r\n  const [loginValue, setLoginValue] = React.useState<string>('');\r\n\r\n  const user = useSelector(store => store.auth.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setLoginValue(user.email);\r\n      setNameValue(user.name);\r\n    }\r\n  }, [user]);\r\n\r\n  const [passwordValue, setPasswordValue] = React.useState<string>('');\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const onIconClick = () => {\r\n    setIsButtonsVisible(true);\r\n  };\r\n\r\n  const [isNameError, setIsNameError] = useState<boolean>(false);\r\n  const [isEmailError, setIsEmailError] = useState<boolean>(false);\r\n  const [isPasswordError, setIsPasswordError] = useState<boolean>(false);\r\n\r\n  const [isInvalidInputs, setIsInvalidInputs] = useState<boolean>(false);\r\n  const [isButtonsVisible, setIsButtonsVisible] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    (!isNameError && !isEmailError && !isPasswordError) ? setIsInvalidInputs(false) : setIsInvalidInputs(true)\r\n  }, [isNameError, isEmailError, isPasswordError]);\r\n\r\n  function validateName() {\r\n    if (nameValue.length >=2 && nameValue.length < 21) {\r\n      setIsNameError(false)\r\n    } else {\r\n      setIsNameError(true);\r\n      setIsInvalidInputs(true)\r\n    }\r\n  };\r\n\r\n  function validateEmail() {\r\n    if (regExp.test(loginValue)) {\r\n      setIsEmailError(false)\r\n    } else {\r\n      setIsEmailError(true);\r\n      setIsInvalidInputs(true)\r\n    }\r\n  };\r\n\r\n  function validatePassword() {\r\n    if ((passwordValue.length >=8 && passwordValue.length < 21)) {\r\n      setIsPasswordError(false)\r\n    } else {\r\n      setIsPasswordError(true);\r\n      setIsInvalidInputs(true)\r\n    }\r\n  }\r\n\r\n  function checkFormValidity() {\r\n    validateName();\r\n    validateEmail();\r\n    validatePassword();\r\n  }\r\n\r\n  function clearEmailErrors() {\r\n    setIsEmailError(false);\r\n  };\r\n\r\n  function clearNameErrors() {\r\n    setIsNameError(false)\r\n  };\r\n\r\n  function clearPasswordErrors() {\r\n    setIsPasswordError(false)\r\n  };\r\n\r\n  function clearAllErrors() {\r\n    clearEmailErrors();\r\n    clearNameErrors();\r\n    clearPasswordErrors();\r\n  };\r\n\r\n  function resetNewData(e: React.SyntheticEvent<Element, Event>): void {\r\n    e.preventDefault();\r\n    clearAllErrors();\r\n    if (isInvalidInputs) {\r\n      return\r\n    };\r\n    setNameValue(nameValue);\r\n    setLoginValue(loginValue);\r\n    setPasswordValue('');\r\n    setIsButtonsVisible(false);\r\n  };\r\n\r\n  const changeUserData = async (newUserData: {name: string; email: string; password: string}) => {\r\n    await dispatch(editUser(newUserData));\r\n  };\r\n\r\n  const editCurrentUser = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    checkFormValidity();\r\n    const newUserData = {\r\n      'name': nameValue,\r\n      'email': loginValue,\r\n      'password': passwordValue\r\n    };\r\n    changeUserData(newUserData).then(() => {\r\n      setIsButtonsVisible(false);\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n\r\n      <ProfileMenu />\r\n\r\n      <form className={formStyles.form} action=\"\" onSubmit={editCurrentUser}>\r\n        <fieldset className={formStyles.fieldset}>\r\n          <Input\r\n            type={'text'}\r\n            placeholder={'Имя'}\r\n            onChange={e => {setIsButtonsVisible(true); setNameValue(e.target.value)}}\r\n            onFocus={clearNameErrors}\r\n            onBlur={validateName}\r\n            icon={'EditIcon'}\r\n            value={nameValue}\r\n            name={'name'}\r\n            error={isNameError}\r\n            ref={inputRef}\r\n            onIconClick={onIconClick}\r\n            errorText={'Длина имени должна быть от 2 до 20 символов'}\r\n            size={'default'}\r\n          />\r\n          <Input\r\n            type={'text'}\r\n            placeholder={'Логин'}\r\n            onChange={e => {setIsButtonsVisible(true); setLoginValue(e.target.value)}}\r\n            onFocus={clearEmailErrors}\r\n            onBlur={validateEmail}\r\n            icon={'EditIcon'}\r\n            value={loginValue}\r\n            name={'email'}\r\n            error={isEmailError}\r\n            ref={inputRef}\r\n            onIconClick={onIconClick}\r\n            errorText={'Введите корректный адрес электронной почты'}\r\n            size={'default'}\r\n          />\r\n          <Input\r\n            type={'password'}\r\n            placeholder={'Пароль'}\r\n            onChange={e => {setIsButtonsVisible(true); setPasswordValue(e.target.value)}}\r\n            onFocus={clearPasswordErrors}\r\n            onBlur={validatePassword}\r\n            icon={'EditIcon'}\r\n            value={passwordValue}\r\n            name={'name'}\r\n            error={isPasswordError}\r\n            ref={inputRef}\r\n            onIconClick={onIconClick}\r\n            errorText={'Пароль должен содержать от 8 до 20 символов'}\r\n            size={'default'}\r\n          />\r\n        </fieldset>\r\n        <div className={`${styles.buttons_wrapper} ${isButtonsVisible ? styles.buttons_wrapper_visible : null}`}>\r\n          <Button type=\"secondary\" size=\"medium\" onClick={resetNewData}>\r\n            Отмена\r\n          </Button>\r\n          <Button type=\"primary\" size=\"medium\" disabled={isInvalidInputs}>\r\n            Сохранить\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nimport styles from './ingredient-mini.module.css';\r\n\r\nimport { defaultBunUrl } from \"../../utils/utils\";\r\nimport { TIngredient } from \"../../services/types/server-data\";\r\n\r\ninterface IIngredientMiniProps {\r\n  ingredient: string | null\r\n}\r\n\r\nexport const IngredientMini: FunctionComponent<IIngredientMiniProps> = ({ingredient}) => {\r\n\r\n  if (ingredient === null) {\r\n    return <img className={styles.image} src={defaultBunUrl}></img>\r\n  };\r\n\r\n  const allIngredients = useSelector(store => store.allIngredients.items);\r\n  const isLoading = useSelector(store => store.allIngredients.isLoading);\r\n\r\n  let ingredientData;\r\n\r\n  if (allIngredients != null) {\r\n    ingredientData = allIngredients.find(element => element._id === ingredient);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading && !allIngredients && <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n      }\r\n      {\r\n        allIngredients && ingredientData  &&\r\n        <div className={styles.image_wrapper}>\r\n          <img className={styles.image} src={ingredientData.image}></img>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from '../../services/hooks';\r\nimport { Link, useLocation, useRouteMatch} from 'react-router-dom';\r\n\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport { IngredientMini } from \"../ingredient-mini/ingredient-mini\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport { TOrder } from \"../../services/types/server-data\";\r\n\r\nimport styles from './order-card.module.css';\r\n\r\ninterface IOrderCardProps {\r\n  order: TOrder\r\n}\r\n\r\nexport const OrderCard: FunctionComponent<IOrderCardProps> = ({ order }) => {\r\n  moment.locale('ru', {\r\n    calendar : {\r\n      lastDay : '[Вчера,] LT',\r\n      sameDay : '[Сегодня,] LT',\r\n      sameElse: 'DD/MM/YYYY',\r\n  }\r\n  });\r\n\r\n  const number = order.number;\r\n  const date = Date.parse(order.createdAt);\r\n  const name = order.name;\r\n  const ingredients = order.ingredients;\r\n\r\n  const id = order._id;\r\n\r\n  let drawableIngredients;\r\n\r\n  if (ingredients.length < 5) {\r\n    drawableIngredients = ingredients;\r\n  } else {\r\n    drawableIngredients = ingredients.slice(0, 5);\r\n  };\r\n\r\n  const allIngredients = useSelector(store => store.allIngredients.items);\r\n\r\n  if (!allIngredients) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n  const priceArray: Array<number> = [];\r\n\r\n  ingredients.forEach((ingredient) => {\r\n    const neededIngredient = allIngredients.find((element) => element._id === ingredient);\r\n\r\n    if (neededIngredient) {\r\n      priceArray.push(neededIngredient.price);\r\n    }\r\n  })\r\n\r\n  const cost = priceArray.reduce((sum, price) => sum + price, 0);\r\n\r\n  const location = useLocation();\r\n\r\n  const { path } = useRouteMatch<string>();\r\n\r\n  return (\r\n      <Link className={styles.link} to={{pathname: `${path}/${id}`, state: {background: location}}}>\r\n        <article className={styles.card}>\r\n        <div className={styles.order_data}>\r\n          <span className=\"text text_type_digits-default\">#{number}</span>\r\n          <time className=\"text text_type_main-default text_color_inactive\">{`${moment(date).utcOffset(\"+03:00\").calendar()} i-GMT+3`}</time>\r\n        </div>\r\n        <h2 className={`text text_type_main-medium ${styles.order_header}`}>{name}</h2>\r\n        <div className={styles.ingredients_and_cost}>\r\n          <div className={styles.ingredients}>\r\n            {\r\n                drawableIngredients.map((ingredient, index) => {\r\n                return (\r\n                  <IngredientMini key={index} ingredient={ingredient}>\r\n                  </IngredientMini>\r\n                )\r\n              })\r\n            } {\r\n              ingredients.length > 5 &&\r\n              <div className={styles.rest_ingredients}>\r\n                <div className={`text text_type_main-default ${styles.additional_quantity}`}>+{ingredients.length - 5}</div>\r\n                <div className={styles.shadow}>\r\n                  <IngredientMini ingredient={ingredients[5]}>\r\n                  </IngredientMini>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className={styles.cost_area}>\r\n            <div className='text text_type_digits-default'>{cost}</div>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n        </article>\r\n      </Link>\r\n  )\r\n};\r\n","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_START_WITH_TOKEN: 'WS_CONNECTION_START_WITH_TOKEN' = 'WS_CONNECTION_START_WITH_TOKEN';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_RESET_ERROR: 'WS_RESET_ERROR' = 'WS_RESET_ERROR';\r\n\r\nexport interface IWsActions {\r\n  wsInit: typeof WS_CONNECTION_START,\r\n  wsInitWithToken: typeof WS_CONNECTION_START_WITH_TOKEN,\r\n  onOpen: typeof WS_CONNECTION_SUCCESS,\r\n  onClose: typeof WS_CONNECTION_CLOSED,\r\n  onError: typeof WS_CONNECTION_ERROR,\r\n  onMessage: typeof WS_GET_MESSAGE,\r\n  wsResetError: typeof WS_RESET_ERROR\r\n}\r\n\r\nexport const wsActions: IWsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  wsInitWithToken: WS_CONNECTION_START_WITH_TOKEN,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_MESSAGE,\r\n  wsResetError: WS_RESET_ERROR\r\n};\r\n","import {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_START_WITH_TOKEN,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n  WS_RESET_ERROR\r\n} from '../constants/wsActionTypes';\r\nimport { TOrder, TWsMessageData } from '../types/server-data';\r\n\r\n\r\ninterface IWsInitAction {\r\n  readonly type: typeof WS_CONNECTION_START\r\n}\r\n\r\ninterface IWsConnectionStartWithTokenAction {\r\n  readonly type: typeof WS_CONNECTION_START_WITH_TOKEN,\r\n  payload: string\r\n}\r\n\r\ninterface IWsConnectionSuccessAction {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS,\r\n  payload: any\r\n}\r\n\r\ninterface IWsGetMessageAction {\r\n  readonly type: typeof WS_GET_MESSAGE,\r\n  payload: TWsMessageData\r\n}\r\n\r\ninterface IWsErrorAction {\r\n  readonly type: typeof WS_CONNECTION_ERROR,\r\n  payload: any\r\n}\r\n\r\ninterface IWsCloseAction {\r\n  readonly type: typeof WS_CONNECTION_CLOSED\r\n}\r\n\r\nexport type TWsActions =\r\n  IWsInitAction |\r\n  IWsConnectionStartWithTokenAction |\r\n  IWsConnectionSuccessAction |\r\n  IWsGetMessageAction |\r\n  IWsErrorAction |\r\n  IWsCloseAction\r\n;\r\n\r\nexport function wsInitAction(): IWsInitAction {\r\n  return {\r\n    type: WS_CONNECTION_START\r\n  }\r\n};\r\n\r\nexport function wsInitWithTokenAction (url: string): IWsConnectionStartWithTokenAction {\r\n  return {\r\n    type: WS_CONNECTION_START_WITH_TOKEN,\r\n    payload: url,\r\n  };\r\n}\r\n\r\nexport function wsConnectionSuccessAction(event: any): IWsConnectionSuccessAction {\r\n  return {\r\n    type: WS_CONNECTION_SUCCESS, payload: event\r\n  }\r\n};\r\n\r\nexport function wsGetMessageAction(data: TWsMessageData): IWsGetMessageAction {\r\n  return {\r\n    type: WS_GET_MESSAGE, payload: data\r\n  }\r\n};\r\n\r\nexport function wsErrorAction(event: any): IWsErrorAction {\r\n  return {\r\n    type: WS_CONNECTION_ERROR, payload: event\r\n  }\r\n};\r\n\r\nexport function wsCloseAction(): IWsCloseAction {\r\n  return {\r\n    type: WS_CONNECTION_CLOSED\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\n\r\nimport styles from './orders-page.module.css';\r\n\r\nimport ProfileMenu from '../../components/profile-menu/profile-menu';\r\nimport { OrderCard } from \"../../components/order-card/order-card\";\r\nimport { WS_CONNECTION_CLOSED } from \"../../services/constants/wsActionTypes\";\r\nimport { wsActions } from \"../../services/constants/wsActionTypes\";\r\nimport { wsInitWithTokenAction, wsCloseAction } from \"../../services/actions/wsActions\";\r\nimport { wsBaseUrl, getCookie } from \"../../utils/utils\";\r\n\r\n\r\nexport default function OrdersPage() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const accessToken = getCookie('token');\r\n\r\n  const { orders, wsConnected, total, totalToday} = useSelector(store => store.ws);\r\n\r\n  useEffect(() => {\r\n    dispatch(wsInitWithTokenAction(`${wsBaseUrl}/orders?token=${accessToken}`));\r\n    return () => {\r\n      dispatch(wsCloseAction());\r\n    };\r\n  }, [dispatch, accessToken]);\r\n\r\n  if (!orders) {\r\n    return <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n  }\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <ProfileMenu />\r\n      <section className={styles.order_feed}>\r\n        {orders.map((order) => {\r\n          return (\r\n            <OrderCard key={order._id} order={order}>\r\n\r\n            </OrderCard>\r\n          )\r\n        })}\r\n      </section>\r\n    </main>\r\n  )\r\n};\r\n","import React  from 'react';\r\nimport {  useSelector } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ingredientDetails from './ingredient-details.module.css';\r\n\r\ntype TIdParam = {\r\n  id: string\r\n};\r\n\r\nexport default function IngredientDetails() {\r\n\r\n  const {id} = useParams<TIdParam>();\r\n\r\n  const allIngredients = useSelector(store => store.allIngredients.items);\r\n\r\n  if (!allIngredients) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n  const currentIngredient = allIngredients.find(function(ingredient) {\r\n    return ingredient._id === id;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {!currentIngredient && <p className=\"text text_type_main-medium\">Загружаем данные...</p>}\r\n      {\r\n        currentIngredient && (\r\n          <article className={ingredientDetails.card}>\r\n          <img className={ingredientDetails.image} src={currentIngredient.image_large} />\r\n          <h4 className='mt-4 mb-8 text text_type_main-medium'>{currentIngredient.name}</h4>\r\n          <ul className={`mb-15 ${ingredientDetails.nutritionalValue}`}>\r\n            <li className={`text text_type_main-default text_color_inactive ${ingredientDetails.component}`}>\r\n              <p className={ingredientDetails.componentName}>Калории,ккал</p>\r\n              <span className='text_type_digits-default'>{currentIngredient.calories}</span>\r\n            </li>\r\n            <li className={`text text_type_main-default text_color_inactive ${ingredientDetails.component}`}>\r\n              <p className={ingredientDetails.componentName}>Белки, г</p>\r\n              <span className='text_type_digits-default'>{currentIngredient.proteins}</span>\r\n            </li>\r\n            <li className={`text text_type_main-default text_color_inactive ${ingredientDetails.component}`}>\r\n              <p className={ingredientDetails.componentName}>Жиры, г</p>\r\n              <span className='text_type_digits-default'>{currentIngredient.fat}</span>\r\n            </li>\r\n            <li className={`text text_type_main-default text_color_inactive ${ingredientDetails.component}`}>\r\n              <p className={ingredientDetails.componentName}>Углеводы, г</p>\r\n              <span className='text_type_digits-default'>{currentIngredient.carbohydrates}</span>\r\n            </li>\r\n          </ul>\r\n        </article>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useSelector } from '../services/hooks';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport IngredientDetails from \"../components/ingredient-details/ingredient-details\";\r\n\r\nimport { TEmptyFunction } from \"../services/types/utils\";\r\n\r\n\r\nexport default function IngredientPage() {\r\n\r\n  const allIngredients = useSelector(store => store.allIngredients.items);\r\n\r\n  const history = useHistory();\r\n\r\n  const closeIngredientModal = useCallback<TEmptyFunction>(\r\n    () => {\r\n      history.replace({pathname: '/'})\r\n    }, [history]\r\n  );\r\n\r\n  if (!allIngredients) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <IngredientDetails />\r\n    </main>\r\n  )\r\n\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nimport styles from './orders-list.module.css';\r\n\r\ninterface IOrderListProps {\r\n  status?: string\r\n}\r\n\r\nexport const OrdersList: FunctionComponent<IOrderListProps> = ({status}) => {\r\n\r\n  const {orders} = useSelector(store => store.ws);\r\n\r\n  const doneOrders: Array<number> = [];\r\n\r\n  const inProgressOrders: Array<number> = [];\r\n\r\n  if (!orders) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n  orders.forEach((order) => {\r\n    if (order.status === \"done\") {\r\n      doneOrders.push(order.number);\r\n    } else {\r\n      inProgressOrders.push(order.number);\r\n    }\r\n  });\r\n\r\n  return (\r\n\r\n    <div className={styles.orders_list}>\r\n      { status === 'done' &&\r\n        doneOrders.map((number) => {\r\n          return <span key={number} className={`text text_type_digits-default ${styles.order_done}`}>#{number}</span>\r\n        })\r\n      }\r\n      {\r\n        inProgressOrders.map((number) => {\r\n          return <span key={number} className=\"text text_type_digits-default\">#{number}</span>\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n};\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\n\r\nimport styles from './feed-page.module.css';\r\n\r\nimport { OrderCard } from \"../../components/order-card/order-card\";\r\nimport { OrdersList } from \"../../components/orders-list/orders-list\";\r\n\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSED, WS_CONNECTION_ERROR, WS_RESET_ERROR } from \"../../services/constants/wsActionTypes\";\r\n\r\nimport { TEmptyFunction } from \"../../services/types/utils\";\r\n\r\nexport default function FeedPage() {\r\n\r\n  const dispatch = useDispatch();\r\n  const { orders, wsConnected, total, totalToday, error} = useSelector(store => store.ws);\r\n\r\n  const resetError = useCallback<TEmptyFunction>(() => {\r\n    dispatch({type: WS_CONNECTION_ERROR});\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch({type: WS_CONNECTION_START});\r\n    return () => {\r\n      dispatch({type: WS_CONNECTION_CLOSED});\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (error) {\r\n    dispatch({type: WS_RESET_ERROR});\r\n  };\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <h1 className={styles.header}>Лента заказов</h1>\r\n      {\r\n        !wsConnected && <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n      }\r\n      {\r\n        wsConnected && orders &&\r\n        <div className={styles.columns}>\r\n          <section className={styles.order_feed}>\r\n            {orders.map((order) => {\r\n              return (\r\n                <OrderCard key={order._id} order={order}>\r\n\r\n                </OrderCard>\r\n              )\r\n            })}\r\n          </section>\r\n          <section className={styles.orders_info}>\r\n            <div className={styles.status}>\r\n              <div className={styles.status_ready}>\r\n                <p className=\"text text_type_main-medium\">Готовы:</p>\r\n                <OrdersList status={'done'}></OrdersList>\r\n              </div>\r\n              <div className={styles.status_in_progress}>\r\n                <p className=\"text text_type_main-medium\">В работе:</p>\r\n                <OrdersList></OrdersList>\r\n              </div>\r\n            </div>\r\n            <div className={styles.complete_all}>\r\n              <p className=\"text text_type_main-medium\">Выполнено за всё время:</p>\r\n              <span className=\"text text_type_digits-large\">{total}</span>\r\n            </div>\r\n            <div className={styles.complete_today}>\r\n              <p className=\"text text_type_main-medium\">Выполнено за сегодня:</p>\r\n              <span className=\"text text_type_digits-large\">{totalToday}</span>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      }\r\n    </main>\r\n  )\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nimport styles from './ingredient-card.module.css';\r\n\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport { IngredientMini } from \"../ingredient-mini/ingredient-mini\";\r\n\r\nimport { TOrder } from '../../services/types/server-data';\r\n\r\ninterface IIngCardProps {\r\n  ingredient: string,\r\n  order: TOrder,\r\n  amount: number\r\n}\r\n\r\nexport const IngredientCard: FunctionComponent<IIngCardProps> = ({ingredient, order, amount}) => {\r\n  const currentOrder = order;\r\n\r\n  const number = currentOrder.number;\r\n\r\n  const allIngredients = useSelector(store => store.allIngredients.items);\r\n\r\n  if (!allIngredients) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n  const neededIngredient = allIngredients.find((element) => element._id === ingredient);\r\n  //@ts-ignore\r\n  const name = neededIngredient.name;\r\n  //@ts-ignore\r\n  const price = neededIngredient.price;\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      <IngredientMini ingredient={ingredient}></IngredientMini>\r\n      <p className={`text text_type_main-default ${styles.name}`}>{name}</p>\r\n      <div className={styles.amount_and_price}>\r\n        <span className=\"text text_type_digits-default\">{amount}</span>\r\n        <span className=\"text text_type_digits-default\">x</span>\r\n        <span className=\"text text_type_digits-default\">{price}</span>\r\n        <CurrencyIcon type=\"primary\" />\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport styles from './full-order-card.module.css';\r\n\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {IngredientCard} from \"../ingredient-card/ingredient-card\";\r\nimport { statuses } from \"../../utils/utils\";\r\n\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSED } from \"../../services/constants/wsActionTypes\";\r\nimport { wsActions } from \"../../services/constants/wsActionTypes\";\r\n\r\ntype TIdParam = {\r\n  id: string\r\n};\r\n\r\nexport default function FullOrderCard() {\r\n\r\n  moment.locale('ru', {\r\n    calendar : {\r\n      lastDay : '[Вчера,] LT',\r\n      sameDay : '[Сегодня,] LT',\r\n      sameElse: 'DD/MM/YYYY',\r\n  }\r\n  });\r\n\r\n  const {id} = useParams<TIdParam>();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const allIngredients = useSelector(store => store.allIngredients.items);\r\n\r\n  const orders = useSelector(store => store.ws.orders);\r\n\r\n  if (!orders) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n  const currentOrder = orders.find((order) => order._id === id);\r\n\r\n  if (currentOrder === undefined) {\r\n    return ( <p className=\"text text_type_main-medium\">Не удалось найти такой заказ...</p>\r\n    )\r\n  }\r\n\r\n  const number = currentOrder.number;\r\n  const ingredients = currentOrder.ingredients;\r\n  const name = currentOrder.name;\r\n  const date = Date.parse(currentOrder.createdAt);\r\n  const currentStatus = currentOrder.status;\r\n\r\n  const status = statuses[currentStatus];\r\n\r\n  const uniqIngredientsObj: {\r\n    [key: string]: number\r\n  } = {};\r\n\r\n  const ingredientsObj = {...ingredients};\r\n\r\n  if (ingredients !== null) {\r\n    ingredients.forEach((ingredient) => {\r\n      if (ingredient !== null) {\r\n        if (!uniqIngredientsObj[ingredient]) {\r\n          uniqIngredientsObj[ingredient] = 1\r\n        } else {\r\n          uniqIngredientsObj[ingredient] += 1\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const uniqIngredients = Object.entries(uniqIngredientsObj);\r\n\r\n  const priceArray: Array<number> = [];\r\n\r\n  if (allIngredients !== null) {\r\n    ingredients.forEach((ingredient) => {\r\n      const neededIngredient = allIngredients.find((element) => element._id === ingredient);\r\n      if (neededIngredient) {\r\n        priceArray.push(neededIngredient.price);\r\n      }\r\n    })\r\n  }\r\n\r\n  const cost: number = priceArray.reduce((sum, price) => sum + price, 0);\r\n\r\n\r\n  if (!orders) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n  if (!allIngredients) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <section className={styles.card}>\r\n      <span className={`text text_type_digits-default ${styles.number}`}>#{number}</span>\r\n      <h2 className={`text text_type_main-medium ${styles.order_header}`}>{name}</h2>\r\n      <span className={`text text_type_main-default ${styles.status}`}>{status}</span>\r\n\r\n      <div className={styles.composition}>\r\n        <span className={`text text_type_main-medium`}>Состав:</span>\r\n        <div className={styles.ingredients_area}>\r\n          {\r\n            uniqIngredients.map((ingredient) => {\r\n              return (\r\n                <IngredientCard key={ingredient[0]} order={currentOrder} ingredient={ingredient[0]} amount={ingredient[1]}></IngredientCard>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.time_and_cost}>\r\n        <time className=\"text text_type_main-default text_color_inactive\">{`${moment(date).utcOffset(\"+03:00\").calendar()} i-GMT+3`}</time>\r\n        <div className={styles.cost_field}>\r\n          <div className='text text_type_digits-default'>{cost}</div>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import React, { useEffect, useCallback, FunctionComponent } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport styles from './order-details-page.module.css';\r\n\r\nimport FullOrderCard from \"../../components/full-order-card/full-order-card\";\r\n\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSED } from \"../../services/constants/wsActionTypes\";\r\nimport { wsInitAction, wsInitWithTokenAction } from \"../../services/actions/wsActions\";\r\n\r\nimport { wsBaseUrl, getCookie } from \"../../utils/utils\";\r\n\r\nimport { TEmptyFunction } from '../../services/types/utils';\r\n\r\ninterface IOrderDetailsPageProps {\r\n  secured: boolean\r\n}\r\n\r\nexport const OrderDetailsPage: FunctionComponent<IOrderDetailsPageProps> = ({ secured }) => {\r\n\r\n  const allIngredients = useSelector(store => store.allIngredients.items);\r\n\r\n  const history = useHistory();\r\n\r\n  const closeOrderModal = useCallback<TEmptyFunction>(\r\n    () => {\r\n      history.replace({pathname: '/feed'})\r\n    }, [history]\r\n  );\r\n\r\n  const accessToken = getCookie('token');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    secured\r\n    ? dispatch(wsInitWithTokenAction(`${wsBaseUrl}/orders?token=${accessToken}`))\r\n    : dispatch(wsInitAction());\r\n  }, [dispatch, accessToken]);\r\n\r\n  if (!allIngredients) {\r\n    return ( <p className=\"text text_type_main-medium\">Загружаем данные...</p>\r\n    )\r\n  };\r\n\r\n    return (\r\n      <main className={styles.main}>\r\n        <FullOrderCard></FullOrderCard>\r\n      </main>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport styles from './not-found-page.module.css';\r\n\r\nexport default function Page404() {\r\n  return (\r\n    <>\r\n      <main className={styles.main}>\r\n        <h1 className={`text text_type_main-large ${styles.title}`}>Оууу, страница не найдена. Попробуйте вернуться назад<span>&#127776;</span></h1>\r\n        <a className={styles.rights_link} href=\"https://ru.freepik.com/photos/background\">Background фото создан(а) kjpargeter - ru.freepik.com</a>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n","import {baseUrl, checkResponse} from '../../utils/utils';\r\n\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nimport {GET_ALL_INGREDIENTS, GET_ALL_INGREDIENTS_SUCCESS, GET_ALL_INGREDIENTS_FAILED} from '../constants/index';\r\nimport {TIngredient} from '../types/server-data';\r\nimport { TAllIngredientsResponse } from '../types/server-data';\r\n\r\ninterface IGetAllIngredientsAction {\r\n  readonly type: typeof GET_ALL_INGREDIENTS,\r\n  readonly isLoading: true,\r\n  readonly isFailed: false,\r\n}\r\n\r\ninterface IGetAllIngredientsSuccessAction {\r\n  readonly type: typeof GET_ALL_INGREDIENTS_SUCCESS,\r\n  readonly isLoading: false,\r\n  readonly isFailed: false,\r\n  readonly items: ReadonlyArray<TIngredient>\r\n}\r\n\r\ninterface IGetAllIngredientsFailedAction {\r\n  readonly type: typeof GET_ALL_INGREDIENTS_FAILED,\r\n  readonly isLoading: false,\r\n  readonly isFailed: true,\r\n}\r\n\r\nexport type TAllIngredientsActions =\r\n  IGetAllIngredientsAction |\r\n  IGetAllIngredientsSuccessAction |\r\n  IGetAllIngredientsFailedAction\r\n;\r\n\r\nfunction getAllIngredientsAction(): IGetAllIngredientsAction {\r\n  return {\r\n    type: GET_ALL_INGREDIENTS,\r\n    isLoading: true,\r\n    isFailed: false,\r\n  }\r\n};\r\n\r\nfunction getAllIngredientsSuccessAction(data: ReadonlyArray<TIngredient>): IGetAllIngredientsSuccessAction {\r\n  return {\r\n    type: GET_ALL_INGREDIENTS_SUCCESS,\r\n    isLoading: false,\r\n    isFailed: false,\r\n    items: data\r\n  }\r\n};\r\n\r\nfunction getAllIngredientsFailedAction(): IGetAllIngredientsFailedAction {\r\n  return {\r\n    type: GET_ALL_INGREDIENTS_FAILED,\r\n    isLoading: false,\r\n    isFailed: true,\r\n  }\r\n};\r\n\r\n\r\nconst getAllIngredients: AppThunk = () => {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch(getAllIngredientsAction())\r\n\r\n    fetch(`${baseUrl}/ingredients`)\r\n      .then(res => checkResponse<TAllIngredientsResponse>(res))\r\n      .then ((res) => {\r\n        dispatch(getAllIngredientsSuccessAction(res.data))\r\n      })\r\n      .catch(err =>\r\n        dispatch(getAllIngredientsFailedAction())\r\n      )\r\n  }\r\n};\r\n\r\nexport {getAllIngredients};\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { Switch, BrowserRouter, Route, useLocation, useHistory, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\n\r\nimport { ProtectedRoute } from '../protected-route/protected-route';\r\nimport {LoginPage, ConstructorPage, RegisterPage, ForgotPasswordPage, ResetPasswordPage, ProfilePage, OrdersPage, IngredientPage, FeedPage, OrderDetailsPage, Page404} from '../../pages/index.jsx';\r\n\r\nimport { getUser } from '../../services/actions/user';\r\nimport { getCookie } from '../../utils/utils';\r\nimport {getAllIngredients} from '../../services/actions/all-ingredients';\r\n\r\nimport {Modal} from '../modal/modal';\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport FullOrderCard from '../full-order-card/full-order-card';\r\n\r\nimport { TEmptyFunction } from '../../services/types/utils';\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(()=> {\r\n    dispatch(getAllIngredients());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n  }, []);\r\n\r\n  const allIngredients = useSelector(store => store.allIngredients.items);\r\n\r\n  const history = useHistory();\r\n\r\n  const closeIngredientModal = useCallback<TEmptyFunction>(\r\n    () => {\r\n      history.replace({pathname: '/'})\r\n    }, [history]\r\n  );\r\n\r\n  const closeOrderModal = useCallback<TEmptyFunction>(\r\n    () => {\r\n      history.goBack()\r\n    }, [history]\r\n  );\r\n\r\n  const location = useLocation<{background: {\r\n    key: string\r\n    pathname: string\r\n    search: string\r\n    hash: string\r\n    state: unknown\r\n  }}>();\r\n\r\n  const { background } = location.state || { location };\r\n\r\n  return (\r\n    <>\r\n        <AppHeader />\r\n          <Switch location={background}>\r\n            <Route path='/' exact={true}>\r\n              <ConstructorPage/>\r\n            </Route>\r\n\r\n            <Route path='/login' exact={true}>\r\n              <LoginPage/>\r\n            </Route>\r\n\r\n            <Route path='/register'>\r\n              <RegisterPage/>\r\n            </Route>\r\n\r\n\r\n            <Route path='/forgot-password'>\r\n              <ForgotPasswordPage/>\r\n            </Route>\r\n\r\n            <Route path='/reset-password'>\r\n              <ResetPasswordPage/>\r\n            </Route>\r\n\r\n            <Route path='/feed' exact={true}>\r\n              <FeedPage/>\r\n            </Route>\r\n\r\n            <Route path='/feed/:id' exact={true}>\r\n              <OrderDetailsPage secured={false}/>\r\n            </Route>\r\n\r\n            {\r\n              <ProtectedRoute path='/profile' exact={true}>\r\n                <ProfilePage/>\r\n              </ProtectedRoute>\r\n            }\r\n\r\n            {\r\n\r\n              <ProtectedRoute path='/profile/orders' exact={true}>\r\n                <OrdersPage/>\r\n              </ProtectedRoute>\r\n            }\r\n\r\n            {\r\n\r\n              <ProtectedRoute path='/profile/orders/:id' exact={true}>\r\n                <OrderDetailsPage secured={true}/>\r\n              </ProtectedRoute>\r\n            }\r\n\r\n            <Route path='/ingredients/:id' exact={true}>\r\n              <IngredientPage/>\r\n            </Route>\r\n\r\n            <Route>\r\n              <Page404/>\r\n            </Route>\r\n          </Switch>\r\n\r\n          {background && (\r\n            <>\r\n              <Route\r\n                path=\"/ingredients/:id\"\r\n                children={\r\n                  <Modal title=\"Детали ингредиента\" onClose={closeIngredientModal} >\r\n                  {/* <Modal title=\"Детали ингредиента\"> */}\r\n                    <IngredientDetails />\r\n                  </Modal>\r\n                }\r\n              />\r\n\r\n              <Route\r\n                path=\"/feed/:id\"\r\n                children={\r\n                  <Modal title=\"\" onClose={closeOrderModal}>\r\n                    <FullOrderCard></FullOrderCard>\r\n                  </Modal>\r\n                }\r\n              />\r\n\r\n              <Route\r\n                path=\"/profile/orders/:id\"\r\n                children={\r\n                  <Modal title=\"\" onClose={closeOrderModal}>\r\n                    <FullOrderCard></FullOrderCard>\r\n                  </Modal>\r\n                }\r\n              />\r\n            </>\r\n            )\r\n          }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { IWsActions } from './constants/wsActionTypes';\r\nimport { Middleware, MiddlewareAPI } from 'redux';\r\nimport { RootState } from './types';\r\nimport { AppDispatch } from './types';\r\n\r\nexport const socketMiddleware = (wsUrl: string, wsActions: IWsActions): Middleware<{}, RootState> => {\r\n  return (store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return next => action => {\r\n\r\n      const { dispatch } = store;\r\n      const { type, payload } = action;\r\n      const { wsInit, wsInitWithToken, onOpen, onClose, onError, onMessage } = wsActions;\r\n\r\n      if (type === wsInit) {\r\n        socket = new WebSocket(`${wsUrl}`);\r\n      };\r\n\r\n      if (type === wsInitWithToken) {\r\n        socket = new WebSocket(payload);\r\n      };\r\n\r\n      if (type === onClose && socket !== null) {\r\n        socket.close();\r\n      };\r\n\r\n      if (socket) {\r\n        socket.onopen = event => {\r\n          dispatch({ type: onOpen, payload: event });\r\n        };\r\n\r\n        socket.onerror = event => {\r\n          dispatch({ type: onError, payload: event });\r\n        };\r\n\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n\r\n          dispatch({ type: onMessage, payload: restParsedData });\r\n        };\r\n\r\n        socket.onclose = event => {\r\n          dispatch({ type: onClose, payload: event });\r\n        };\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  };\r\n};\r\n","import {GET_ALL_INGREDIENTS, GET_ALL_INGREDIENTS_SUCCESS, GET_ALL_INGREDIENTS_FAILED} from '../constants/index';\r\nimport { TAllIngredientsActions } from '../actions/all-ingredients';\r\nimport {TIngredient} from '../types/server-data';\r\n\r\ntype TAllIngredientsState = {\r\n  isLoading: boolean;\r\n  isFailed: boolean,\r\n  items: ReadonlyArray<TIngredient> | null\r\n};\r\n\r\nconst initialState: TAllIngredientsState = {\r\n  isLoading: false,\r\n  isFailed: false,\r\n  items: []\r\n};\r\n\r\n\r\nconst allIngredientsReducer = (state = initialState, action: TAllIngredientsActions): TAllIngredientsState => {\r\n  switch (action.type) {\r\n    case GET_ALL_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n        isFailed: action.isFailed,\r\n      }\r\n    }\r\n    case GET_ALL_INGREDIENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n        isFailed: action.isFailed,\r\n        items: action.items\r\n      }\r\n    }\r\n    case GET_ALL_INGREDIENTS_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n        isFailed: action.isFailed,\r\n      };\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport {allIngredientsReducer};\r\n","import {GET_ORDER, GET_ORDER_SUCCESS, GET_ORDER_FAILED, CLOSE_ORDER} from '../constants/index';\r\nimport { TOrderActions } from '../actions/order';\r\n\r\ntype TOrderState = {\r\n  isOrderModalClosed: boolean,\r\n  isOrderSent: boolean,\r\n  isOrderRejected: boolean,\r\n  number: number | null\r\n};\r\n\r\nconst orderInitialState: TOrderState = {\r\n  isOrderModalClosed: true,\r\n  isOrderSent: false,\r\n  isOrderRejected: false,\r\n  number: null\r\n};\r\n\r\nconst orderReducer = (state = orderInitialState, action: TOrderActions): TOrderState => {\r\n  switch (action.type) {\r\n    case GET_ORDER: {\r\n      return {\r\n        ...state,\r\n        isOrderModalClosed: action.isOrderModalClosed,\r\n        isOrderSent: action.isOrderSent,\r\n        isOrderRejected: action.isOrderRejected,\r\n      }\r\n\r\n    }\r\n    case GET_ORDER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isOrderModalClosed: action.isOrderModalClosed,\r\n        isOrderSent: action.isOrderSent,\r\n        isOrderRejected: action.isOrderRejected,\r\n        number: action.number\r\n      }\r\n    }\r\n    case GET_ORDER_FAILED: {\r\n      return {\r\n        ...state,\r\n        isOrderModalClosed: action.isOrderModalClosed,\r\n        isOrderSent: action.isOrderSent,\r\n        isOrderRejected: action.isOrderRejected\r\n      }\r\n    }\r\n    case CLOSE_ORDER: {\r\n      return {\r\n        ...state,\r\n        isOrderModalClosed: action.isOrderModalClosed,\r\n        number: action.number\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport {orderReducer};\r\n","import { ADD_TO_CONSTRUCTOR, DELETE_FROM_CONSTRUCTOR, REORDER_INGREDIENT } from '../constants/index';\r\nimport { TIngredientInConstructorActions } from '../actions/constructor-ingredients';\r\n\r\nimport { TIngredient } from '../types/server-data';\r\nimport { TIngredientWithCount } from '../types/server-data';\r\n\r\nimport update from 'immutability-helper'\r\n\r\ntype TConstructorState = {\r\n  ingredients: {\r\n    bun: TIngredient | null;\r\n    fillings: ReadonlyArray<TIngredient>\r\n  };\r\n  ingredientsCount: ReadonlyArray<TIngredientWithCount>\r\n};\r\n\r\nconst constructorInitialState: TConstructorState = {\r\n  ingredients: {\r\n    bun: null,\r\n    fillings: []\r\n  },\r\n  ingredientsCount: []\r\n}\r\n\r\nconst constructorIngredientsReducer = (state = constructorInitialState, action: TIngredientInConstructorActions): TConstructorState => {\r\n  switch (action.type) {\r\n    case ADD_TO_CONSTRUCTOR: {\r\n\r\n      let arr = [...state.ingredientsCount];\r\n      const sameIndex = arr.findIndex(element => element.itemId === action.item._id);\r\n      const sameElement = arr[sameIndex];\r\n      sameIndex === -1 ?\r\n      arr.push({itemId: action.item._id, count: 1}) :\r\n      arr.splice(sameIndex, 1, {itemId: sameElement.itemId, count: sameElement.count + 1});\r\n\r\n      return {\r\n        ...state,\r\n        ingredients: (\r\n          action.item.type === 'bun' ?\r\n          {bun: action.item, fillings: [...state.ingredients.fillings]} :\r\n          {...state.ingredients, fillings: [...state.ingredients.fillings, {...action.item, uId: action.uId }]}\r\n        ),\r\n        ingredientsCount: (\r\n          action.item.type === 'bun' ?\r\n          [...state.ingredientsCount] :\r\n          arr\r\n        )\r\n      }\r\n    }\r\n    case DELETE_FROM_CONSTRUCTOR: {\r\n      const spliceArr = [...state.ingredients.fillings];\r\n      spliceArr.splice(action.key, 1);\r\n\r\n      let arr = [...state.ingredientsCount];\r\n      const sameIndex = arr.findIndex(element => element.itemId === action.item._id);\r\n      const sameElement = arr[sameIndex];\r\n      sameElement.count === 1 ?\r\n      arr.splice(sameIndex, 1) :\r\n      arr.splice(sameIndex, 1, {itemId: sameElement.itemId, count: sameElement.count - 1});\r\n\r\n\r\n      return {\r\n        ...state,\r\n        ingredients: {...state.ingredients, fillings: spliceArr},\r\n        ingredientsCount: arr\r\n      }\r\n    }\r\n    case REORDER_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        ingredients: { ...state.ingredients,\r\n        fillings: update(state.ingredients.fillings, {\r\n          $splice: [\r\n            [action.dragIndex, 1],\r\n            [action.hoverIndex, 0, state.ingredients.fillings[action.dragIndex]],\r\n          ],\r\n        })\r\n      }\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport {constructorIngredientsReducer};\r\n","import {LOGIN, LOGIN_SUCCESS, LOGIN_FAILED,\r\n  LOGOUT, LOGOUT_SUCCESS, LOGOUT_FAILED,\r\n  RESET_PASSWORD, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAILED,\r\n  RECOVER_PASSWORD, RECOVER_PASSWORD_SUCCESS, RECOVER_PASSWORD_FAILED,\r\n  REGISTER, REGISTER_SUCCESS, REGISTER_FAILED,\r\n  GET_USER, GET_USER_SUCCESS, GET_USER_FAILED, EDIT_USER, EDIT_USER_SUCCESS, EDIT_USER_FAILED\r\n} from '../constants/index';\r\nimport { TLoginActions } from '../actions/login';\r\nimport { TLogoutActions } from '../actions/logout';\r\nimport { TPasswordActions } from '../actions/password';\r\nimport { TRegisterActions } from '../actions/register';\r\nimport { TUserActions } from '../actions/user';\r\n\r\nimport { TUser } from '../types/server-data';\r\n\r\nimport {recoverPassword, resetPassword} from '../actions/password';\r\nimport {setCookie, getCookie} from '../../utils/utils';\r\n\r\ntype TAuthActions =\r\n  TLoginActions |\r\n  TLogoutActions |\r\n  TPasswordActions |\r\n  TRegisterActions |\r\n  TUserActions\r\n;\r\n\r\ntype TAuthState = {\r\n  isLoading: boolean;\r\n  isFailed: boolean,\r\n  user: TUser | null,\r\n  accessToken: string | null,\r\n  isAuth: boolean,\r\n  isAuthChecked: boolean,\r\n  isLogoutChecked: boolean\r\n}\r\n\r\nconst initialState: TAuthState = {\r\n  isLoading: false,\r\n  isFailed: false,\r\n  user: null,\r\n  accessToken: null,\r\n  isAuth: false,\r\n  isAuthChecked: false,\r\n  isLogoutChecked: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action: TAuthActions): TAuthState => {\r\n  switch (action.type) {\r\n    case REGISTER: {\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n        isFailed: action.isFailed,\r\n        isAuth: action.isAuth\r\n      }\r\n    }\r\n    case REGISTER_SUCCESS: {\r\n      localStorage.setItem('refreshToken', action.refreshToken);\r\n      setCookie('token', action.accessToken.split('Bearer ')[1]);\r\n\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n        isFailed: action.isFailed,\r\n        user: action.user,\r\n        accessToken: action.accessToken,\r\n        isAuth: action.isAuth\r\n      }\r\n    }\r\n    case REGISTER_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n        isFailed: action.isFailed,\r\n        isAuth: action.isAuth\r\n      }\r\n    }\r\n\r\n    case LOGIN: {\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n        isFailed: action.isFailed,\r\n        isAuth: action.isAuth\r\n      }\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      setCookie('token', action.accessToken.split('Bearer ')[1]);\r\n      localStorage.setItem('refreshToken', action.refreshToken);\r\n\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n        isFailed: action.isFailed,\r\n        user: action.user,\r\n        accessToken: action.accessToken,\r\n        isAuth: action.isAuth,\r\n        isLogoutChecked: action.isLogoutChecked\r\n      }\r\n    }\r\n    case LOGIN_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n        isFailed: action.isFailed,\r\n        isAuth: action.isAuth,\r\n        isLogoutChecked: action.isLogoutChecked\r\n      }\r\n    }\r\n\r\n    case RECOVER_PASSWORD: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n    case RECOVER_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n    case RECOVER_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n\r\n    case RESET_PASSWORD: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n    case RESET_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n    case RESET_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n\r\n    case GET_USER: {\r\n      return {\r\n        ...state,\r\n        isAuth: action.isAuth,\r\n        isAuthChecked: action.isAuthChecked\r\n      }\r\n    }\r\n    case GET_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isAuth: action.isAuth,\r\n        isAuthChecked: action.isAuthChecked,\r\n        isLogoutChecked: action.isLogoutChecked\r\n      }\r\n    }\r\n\r\n    case GET_USER_FAILED: {\r\n      return {\r\n        ...state,\r\n        isAuth: action.isAuth,\r\n        isAuthChecked: action.isAuthChecked,\r\n        isLogoutChecked: action.isLogoutChecked\r\n      }\r\n    }\r\n\r\n    case EDIT_USER: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n    case EDIT_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      }\r\n    }\r\n\r\n    case EDIT_USER_FAILED: {\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n\r\n    case LOGOUT: {\r\n      return {\r\n        ...state,\r\n        isLogoutChecked: action.isLogoutChecked\r\n      }\r\n    }\r\n\r\n    case LOGOUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        accessToken: action.accessToken,\r\n        isAuth: action.isAuth,\r\n        isAuthChecked: action.isAuthChecked,\r\n        isLogoutChecked: action.isLogoutChecked\r\n      }\r\n    }\r\n    case LOGOUT_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLogoutChecked: action.isLogoutChecked\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport {authReducer};\r\n","import {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n  WS_RESET_ERROR\r\n} from '../constants/wsActionTypes';\r\n\r\nimport { TOrder } from '../types/server-data';\r\nimport { TWsActions } from '../actions/wsActions';\r\n\r\ntype TWsState = {\r\n  wsConnected: boolean,\r\n  orders: ReadonlyArray<TOrder> | null,\r\n  total: number | null,\r\n  totalToday: number | null,\r\n  // кажется, для error нужно прописать ещё какой-то тип\r\n  error: undefined\r\n};\r\n\r\nconst initialState: TWsState = {\r\n  wsConnected: false,\r\n  orders: null,\r\n  total: null,\r\n  totalToday: null,\r\n  error: undefined\r\n};\r\n\r\nexport const wsReducer = (state = initialState, action: TWsActions): TWsState => {\r\n  switch (action.type) {\r\n\r\n    // case WS_CONNECTION_START:\r\n    //   return {\r\n    //     ...state,\r\n    //     wsConnected: true,\r\n    //     error: undefined\r\n    // };\r\n\r\n    // case WS_CONNECTION_START_WITH_TOKEN:\r\n    //   return {\r\n    //     ...state,\r\n    //     wsConnected: true,\r\n    //     error: undefined\r\n    // };\r\n\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        wsConnected: true,\r\n        error: undefined\r\n      };\r\n\r\n    case  WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case  WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        error: undefined\r\n      };\r\n\r\n    case WS_GET_MESSAGE:\r\n\r\n      const allOrders = action.payload.orders;\r\n      const rightOrders: Array<TOrder> = [];\r\n\r\n      allOrders.forEach((order: TOrder) => {\r\n        if (!order.ingredients.includes(null)) {\r\n          rightOrders.push(order);\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        orders: rightOrders,\r\n        total: action.payload.total,\r\n        totalToday: action.payload.totalToday,\r\n        error: undefined\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport {allIngredientsReducer} from './all-ingredients';\r\nimport { orderReducer } from \"./order\";\r\nimport {constructorIngredientsReducer} from './constructor-ingredients';\r\nimport { authReducer } from \"./auth\";\r\nimport { wsReducer } from \"./wsReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  allIngredients: allIngredientsReducer,\r\n  order: orderReducer,\r\n  constructorIngredients: constructorIngredientsReducer,\r\n  auth: authReducer,\r\n  ws: wsReducer\r\n});\r\n\r\nexport {rootReducer};\r\n","\r\nimport thunk from 'redux-thunk';\r\nimport { compose, createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './reducers/index';\r\nimport { socketMiddleware } from './socketMiddleware';\r\n\r\nimport { wsUrl } from '../utils/utils';\r\nimport { wsActions } from './constants/wsActionTypes';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\n// const composeEnhancers =\r\n\r\n// typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n\r\n//   ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n//   : compose;\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(wsUrl, wsActions)));\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport {store};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './components/app/app';\r\nimport {store} from './services/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__3aP_-\",\"menu\":\"app-header_menu__BYcXU\",\"menuLeftColumn\":\"app-header_menuLeftColumn__1efEX\",\"logo\":\"app-header_logo__3FgJz\",\"link\":\"app-header_link__JBl_Q\",\"active_nav_link\":\"app-header_active_nav_link__k6UU1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"order-card_card__5vAta\",\"link\":\"order-card_link__3QCzm\",\"order_data\":\"order-card_order_data__4qZ9F\",\"order_header\":\"order-card_order_header__TaRvi\",\"ingredients_and_cost\":\"order-card_ingredients_and_cost__-LTFd\",\"cost_area\":\"order-card_cost_area__3XhEf\",\"ingredients\":\"order-card_ingredients__1Etwo\",\"rest_ingredients\":\"order-card_rest_ingredients__1DWSP\",\"additional_quantity\":\"order-card_additional_quantity__2tzhH\",\"shadow\":\"order-card_shadow__1EyLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-page_main__3_cYV\",\"columns\":\"feed-page_columns__3t9Jg\",\"header\":\"feed-page_header__R6kvb\",\"status\":\"feed-page_status__ARIlh\",\"order_feed\":\"feed-page_order_feed__22U_n\",\"orders_info\":\"feed-page_orders_info__1Bsqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"full-order-card_card__3EEFH\",\"number\":\"full-order-card_number__YKf5X\",\"order_header\":\"full-order-card_order_header__2n5IA\",\"status\":\"full-order-card_status__-BHPG\",\"composition\":\"full-order-card_composition__3LyrC\",\"ingredients_area\":\"full-order-card_ingredients_area__ksprE\",\"time_and_cost\":\"full-order-card_time_and_cost__3nLV3\",\"cost_field\":\"full-order-card_cost_field__58bij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"draggable-ingredient_card__22tkQ\",\"link\":\"draggable-ingredient_link__3bQE4\",\"image\":\"draggable-ingredient_image__1m-FI\",\"priceArea\":\"draggable-ingredient_priceArea__3AhhM\",\"price\":\"draggable-ingredient_price__1BTka\",\"title\":\"draggable-ingredient_title__3f5eQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-constructor_section__1Oj45\",\"compositionArea\":\"burger-constructor_compositionArea__ZJMAt\",\"compositionChangebleList\":\"burger-constructor_compositionChangebleList__iML4F burger-constructor_compositionArea__ZJMAt\",\"info\":\"burger-constructor_info__3KXnR\",\"priceArea\":\"burger-constructor_priceArea__wz5I3\",\"currentIcon\":\"burger-constructor_currentIcon__2Jfmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"order-details_card__5QrrG\",\"orderId\":\"order-details_orderId__Gi4mV\",\"image\":\"order-details_image__16IXB\",\"info\":\"order-details_info__m5bOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-ingredients_section__3F4Wu\",\"menu\":\"burger-ingredients_menu__1eRvv\",\"ingredients\":\"burger-ingredients_ingredients__3U86K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3B1Cq\",\"header\":\"modal_header__3F4Ga\",\"title\":\"modal_title__2uJj5\",\"someContainer\":\"modal_someContainer__3i7LI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile-page_main__1MRdP\",\"buttons_wrapper\":\"profile-page_buttons_wrapper__jld7X\",\"buttons_wrapper_visible\":\"profile-page_buttons_wrapper_visible__2C3bv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image_wrapper\":\"ingredient-mini_image_wrapper__3dVNp\",\"image\":\"ingredient-mini_image__1Z29U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingredient-card_card__1JmUJ\",\"name\":\"ingredient-card_name__zkStK\",\"amount_and_price\":\"ingredient-card_amount_and_price__1PBaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"not-found-page_main__1GN0c\",\"title\":\"not-found-page_title__15PMT\",\"cover_image\":\"not-found-page_cover_image__3QmoR\",\"rights_link\":\"not-found-page_rights_link__MJLTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"orders-page_main__1MQUZ\",\"order_feed\":\"orders-page_order_feed__35INb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders_list\":\"orders-list_orders_list__1u5rk\",\"order_done\":\"orders-list_order_done__3t-Vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"inputs-pages_main__gINzV\",\"form\":\"inputs-pages_form__1eMjc\",\"fieldset\":\"inputs-pages_fieldset__1zPkX\",\"additional_actions\":\"inputs-pages_additional_actions__tuMEw\",\"additional_action\":\"inputs-pages_additional_action__2ANpo\"};"],"sourceRoot":""}